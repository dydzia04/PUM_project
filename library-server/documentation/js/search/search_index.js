var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.765,1,2.087]],["body/controllers/AppController.html",[0,1.366,1,3.173,2,1.327,3,0.245,4,0.245,5,0.204,6,3.147,7,0.475,8,4.082,9,3.561,10,4.872,11,4.872,12,0.527,13,1.862,14,4.793,15,1.327,16,0.03,17,0.638,18,3.756,19,3.173,20,2.189,21,4.082,22,4.082,23,1.436,24,0.827,25,0.616,26,0.897,27,2.89,28,3.147,29,0.245,30,0.194,31,2.207,32,2.207,33,1.436,34,3.756,35,0.017,36,0.022,37,0.017]],["title/modules/AppModule.html",[38,1.133,39,2.087]],["body/modules/AppModule.html",[1,3.28,2,1.566,3,0.212,4,0.212,5,0.177,16,0.03,25,0.755,26,0.777,27,3.118,28,2.728,29,0.212,30,0.168,35,0.015,36,0.02,37,0.015,38,1.78,39,4.176,40,1.463,41,1.463,42,1.741,43,1.741,44,1.463,45,2.692,46,1.741,47,2.728,48,2.728,49,2.728,50,3.427,51,3.427,52,3.427,53,3.427,54,2.368,55,1.741,56,1.741,57,3.256,58,4.431,59,3.256,60,3.256,61,3.256,62,3.256,63,3.256]],["title/injectables/AppService.html",[27,1.713,64,1.133]],["body/injectables/AppService.html",[0,1.196,3,0.256,4,0.256,5,0.213,7,0.496,8,4.196,9,4.251,12,0.55,13,1.914,14,4.872,16,0.03,17,0.666,19,3.262,20,2.25,21,4.624,22,4.624,23,1.499,24,0.851,25,0.496,26,0.936,27,2.677,29,0.256,30,0.202,33,1.499,35,0.018,36,0.023,37,0.018,64,1.77,65,2.096,66,3.286,67,2.943,68,3.922]],["title/classes/Author.html",[30,0.165,69,1.225]],["body/classes/Author.html",[3,0.244,4,0.244,5,0.203,7,0.473,12,0.525,16,0.03,17,0.917,24,0.97,29,0.244,30,0.251,35,0.017,36,0.022,37,0.017,69,2.394,70,1.047,71,3.135,72,2.437,73,2.198,74,1.717,75,3.945,76,1.717,77,1.531,78,3.945,79,1.002,80,3.742,81,3.552,82,1.477,83,2.012,84,3.742,85,3.742,86,3.552]],["title/controllers/AuthorController.html",[0,0.765,87,2.087]],["body/controllers/AuthorController.html",[0,0.946,2,0.754,3,0.139,4,0.139,5,0.116,7,0.27,12,0.299,13,1.248,15,1.69,16,0.031,17,0.812,23,1.828,24,0.942,25,0.605,26,0.51,29,0.139,30,0.11,31,1.254,32,1.254,33,1.828,35,0.01,36,0.015,37,0.01,69,2.068,73,2.809,76,1.568,77,1.434,79,0.824,82,1.148,87,2.126,88,1.789,89,1.39,90,1.067,91,1.994,92,1.467,93,1.467,94,1.467,95,1.789,96,2.804,97,2.581,98,2.135,99,2.543,100,1.067,101,1.351,102,2.266,103,2.135,104,3.718,105,0.959,106,2.126,107,2.135,108,5.042,109,2.607,110,2.962,111,0.959,112,2.126,113,2.135,114,1.467,115,0.959,116,3.258,117,2.126,118,2.135,119,1.067,120,2.126,121,1.39,122,2.266,123,1.39,124,2.118,125,1.789,126,0.959,127,2.386,128,0.959,129,1.39,130,0.754,131,2.135,132,2.135,133,1.39,134,2.135,135,2.135,136,1.39,137,2.135,138,1.561,139,2.135,140,1.39,141,2.135]],["title/modules/AuthorModule.html",[38,1.133,50,1.883]],["body/modules/AuthorModule.html",[2,1.788,3,0.26,4,0.26,5,0.216,16,0.03,25,0.703,26,0.951,29,0.26,30,0.206,35,0.018,36,0.023,37,0.018,38,1.965,40,1.791,41,1.791,42,2.13,43,2.13,44,1.791,45,2.972,46,2.13,50,3.625,54,2.705,55,2.13,56,2.13,87,3.621,124,3.298,125,3.339,142,3.339,143,3.339,144,3.985,145,3.985]],["title/injectables/AuthorService.html",[64,1.133,124,1.713]],["body/injectables/AuthorService.html",[0,0.803,3,0.145,4,0.145,5,0.121,7,0.281,12,0.312,13,1.286,16,0.03,17,0.827,23,2.033,24,0.827,25,0.514,26,0.53,29,0.145,30,0.115,33,1.86,35,0.01,36,0.015,37,0.01,64,1.189,65,1.188,67,1.977,69,2.278,73,2.662,76,1.601,77,1.45,79,0.841,82,1.171,83,2.322,90,1.1,91,2.035,92,1.512,93,1.512,94,1.512,95,2.819,96,2.737,99,2.569,100,1.1,101,1.681,102,2.301,104,3.796,105,1.512,109,3.009,110,3.219,111,1.512,114,1.512,115,1.512,116,3.219,119,1.1,122,2.187,124,1.799,126,0.998,127,2.46,128,0.998,146,1.862,147,2.191,148,2.191,149,2.222,150,3.335,151,2.222,152,2.222,153,2.222,154,2.222,155,3.17,156,1.447,157,1.624,158,1.624]],["title/classes/Book.html",[30,0.165,159,1.568]],["body/classes/Book.html",[3,0.217,4,0.217,5,0.181,7,0.422,12,0.468,16,0.03,17,0.927,24,0.765,25,0.569,29,0.217,30,0.263,35,0.015,36,0.021,37,0.015,69,2.334,70,0.933,72,2.932,74,1.591,76,1.591,77,1.474,79,1.014,83,1.864,159,3.059,160,2.793,161,2.645,162,2.334,163,4.167,164,3.334,165,4.573,166,3.334,167,3.334,168,3.334,169,3.334,170,3.334]],["title/controllers/BookController.html",[0,0.765,171,2.087]],["body/controllers/BookController.html",[0,0.96,2,0.773,3,0.143,4,0.143,5,0.119,7,0.277,12,0.307,13,1.271,15,1.708,16,0.031,17,0.821,20,2.019,23,1.848,24,0.948,25,0.611,26,0.522,29,0.143,30,0.113,31,1.285,32,1.285,33,1.848,35,0.01,36,0.015,37,0.01,76,1.588,77,1.566,79,0.834,82,1.162,89,1.424,90,1.087,91,2.019,92,1.494,93,1.494,94,1.494,97,2.62,99,2.559,100,1.087,101,1.377,102,2.019,105,0.983,106,2.165,111,0.983,112,2.165,114,1.494,115,0.983,117,2.165,119,1.087,120,2.165,121,1.424,122,2.287,123,1.424,126,0.983,128,0.983,129,1.424,130,0.773,133,1.424,136,1.424,138,1.599,140,1.424,159,2.666,161,2.84,171,2.165,172,1.833,173,1.833,174,2.828,175,2.187,176,2.187,177,2.187,178,2.187,179,3.281,180,2.187,181,2.187,182,2.15,183,1.833,184,2.431,185,2.187,186,2.187,187,2.187,188,2.187,189,2.187,190,2.187,191,2.187]],["title/modules/BookModule.html",[38,1.133,51,1.883]],["body/modules/BookModule.html",[2,1.788,3,0.26,4,0.26,5,0.216,16,0.03,25,0.703,26,0.951,29,0.26,30,0.206,35,0.018,36,0.023,37,0.018,38,1.965,40,1.791,41,1.791,42,2.13,43,2.13,44,1.791,45,2.972,46,2.13,51,3.625,54,2.705,55,2.13,56,2.13,171,3.621,182,3.298,183,3.339,192,3.339,193,3.339,194,3.985,195,3.985]],["title/injectables/BookService.html",[64,1.133,182,1.713]],["body/injectables/BookService.html",[0,0.636,3,0.108,4,0.108,5,0.09,7,0.209,12,0.231,13,1.018,16,0.031,17,0.808,20,1.729,23,1.615,24,0.891,25,0.571,26,0.394,29,0.108,30,0.085,33,1.727,35,0.008,36,0.012,37,0.008,64,0.942,65,0.882,67,1.565,74,0.942,76,1.36,77,1.168,79,0.785,82,0.995,90,0.871,91,1.729,92,1.197,93,1.197,94,1.197,99,2.359,100,0.871,101,1.871,102,2.03,105,1.197,109,2.655,110,2.908,111,1.197,114,1.197,115,1.197,119,0.871,122,1.898,126,0.741,128,0.741,147,1.735,148,1.735,150,3.223,155,1.074,156,1.074,159,2.719,161,2.261,165,2.232,173,2.232,174,2.415,179,2.908,182,1.424,184,1.948,196,1.382,197,3.849,198,4.755,199,5.47,200,3.352,201,2.665,202,2.665,203,2.665,204,2.665,205,1.649,206,1.649,207,1.649,208,1.649,209,1.649,210,3.54,211,1.103,212,2.665,213,2.232,214,1.649,215,1.649,216,1.074,217,1.948,218,1.281,219,2.232,220,1.382,221,1.382,222,1.649,223,1.649,224,1.649,225,1.649,226,1.649,227,4.755,228,1.649,229,4.225,230,1.649,231,1.649,232,3.352,233,2.665,234,2.665,235,1.649,236,1.649,237,2.665,238,1.649,239,1.649,240,1.649,241,2.665,242,2.665,243,1.649,244,1.649,245,2.665,246,1.649,247,1.649,248,1.649,249,1.649,250,1.649,251,1.649,252,1.649,253,1.649,254,1.649]],["title/classes/CreateAuthorDto.html",[30,0.165,96,1.713]],["body/classes/CreateAuthorDto.html",[3,0.204,4,0.204,5,0.17,7,0.672,12,0.439,15,1.744,16,0.03,17,0.838,24,0.903,25,0.396,29,0.204,30,0.162,35,0.014,36,0.02,37,0.014,69,2.406,70,0.876,73,2.534,74,1.524,75,3.607,77,1.527,78,3.607,79,0.916,81,3.887,82,1.556,83,1.786,86,3.887,96,2.306,100,1.41,130,1.107,211,1.786,218,1.649,255,4.455,256,2.289,257,1.938,258,2.637,259,3.132,260,3.132,261,3.132,262,2.842]],["title/classes/CreateBookDto.html",[30,0.165,174,1.713]],["body/classes/CreateBookDto.html",[3,0.174,4,0.174,5,0.145,7,0.781,12,0.375,15,1.856,16,0.03,17,0.892,24,0.981,25,0.338,29,0.174,30,0.138,35,0.012,36,0.018,37,0.012,69,1.894,70,0.747,74,1.362,77,1.62,79,0.976,83,1.596,100,1.26,130,0.944,159,2.991,161,2.265,162,1.894,163,4.126,174,2.06,211,1.596,218,1.474,257,1.732,258,2.808,262,2.926,263,4.587,264,1.952,265,3.791,266,3.791,267,4.954,268,2.67,269,2.67,270,2.67,271,4.954,272,2.67,273,2.67]],["title/classes/CreatePublisherDto.html",[30,0.165,274,1.713]],["body/classes/CreatePublisherDto.html",[3,0.23,4,0.23,5,0.191,7,0.663,12,0.495,15,1.652,16,0.03,17,0.794,24,0.794,25,0.446,29,0.23,30,0.182,35,0.016,36,0.021,37,0.016,70,0.986,74,1.652,77,1.575,79,0.868,82,1.575,83,1.935,100,1.528,130,1.246,162,2.364,211,1.935,218,1.787,257,2.1,258,2.498,262,2.802,274,2.498,275,4.393,276,2.578,277,2.746,278,3.526,279,3.526]],["title/classes/CreateUserDto.html",[30,0.165,280,1.713]],["body/classes/CreateUserDto.html",[3,0.309,4,0.309,5,0.257,7,0.599,16,0.027,29,0.309,30,0.244,35,0.022,36,0.026,37,0.022,70,1.325,100,1.549,211,1.961,218,1.811,257,2.129,280,3.008,281,3.969,282,3.463,283,2.783]],["title/classes/GoogleData.html",[30,0.165,216,2.087]],["body/classes/GoogleData.html",[3,0.228,4,0.228,5,0.189,7,0.441,12,0.489,16,0.03,17,0.788,24,0.788,29,0.228,30,0.239,35,0.016,36,0.021,37,0.016,70,0.976,74,1.64,79,0.862,82,1.2,210,3.888,213,2.923,216,3.022,217,2.55,218,1.993,284,4.369,285,2.923,286,3.489,287,3.489,288,3.489,289,5.951,290,5.215,291,5.215,292,4.641,293,4.641,294,5.559,295,5.559,296,5.559,297,4.641,298,3.489,299,4.641,300,4.641,301,3.489,302,4.641,303,4.641,304,4.641]],["title/classes/Publisher.html",[30,0.165,162,1.225]],["body/classes/Publisher.html",[3,0.264,4,0.264,5,0.22,7,0.512,12,0.568,16,0.03,17,0.868,24,0.868,29,0.264,30,0.264,35,0.019,36,0.023,37,0.019,70,1.133,72,2.638,74,1.807,76,1.807,77,1.569,79,0.95,82,1.569,83,2.117,162,2.368,277,2.38,305,3.394,306,4.051,307,4.051]],["title/controllers/PublisherController.html",[0,0.765,308,2.087]],["body/controllers/PublisherController.html",[0,0.959,2,0.771,3,0.142,4,0.142,5,0.118,7,0.276,12,0.306,13,1.269,15,1.706,16,0.031,17,0.82,20,2.017,23,1.846,24,0.948,25,0.611,26,0.521,29,0.142,30,0.113,31,1.282,32,1.282,33,1.846,35,0.01,36,0.015,37,0.01,76,1.586,77,1.565,79,0.834,82,1.161,89,1.421,90,1.085,91,2.017,92,1.491,93,1.491,94,1.805,97,2.616,99,2.557,100,1.085,101,1.374,102,2.017,105,0.981,106,2.162,111,0.981,112,2.162,114,1.491,115,0.981,117,2.162,119,1.085,120,2.162,121,1.421,122,2.285,123,1.421,126,0.981,128,0.981,129,1.421,130,0.771,133,1.421,136,1.421,140,1.421,162,2.082,274,2.826,277,2.837,308,2.162,309,1.828,310,1.828,311,2.182,312,2.182,313,2.182,314,2.182,315,3.279,316,2.182,317,2.147,318,1.828,319,2.426,320,2.182,321,2.182,322,2.182,323,2.182,324,2.182,325,2.182,326,2.182,327,2.182]],["title/modules/PublisherModule.html",[38,1.133,52,1.883]],["body/modules/PublisherModule.html",[2,1.788,3,0.26,4,0.26,5,0.216,16,0.03,25,0.703,26,0.951,29,0.26,30,0.206,35,0.018,36,0.023,37,0.018,38,1.965,40,1.791,41,1.791,42,2.13,43,2.13,44,1.791,45,2.972,46,2.13,52,3.625,54,2.705,55,2.13,56,2.13,308,3.621,317,3.298,318,3.339,328,3.339,329,3.339,330,3.985,331,3.985]],["title/injectables/PublisherService.html",[64,1.133,317,1.713]],["body/injectables/PublisherService.html",[0,0.801,3,0.144,4,0.144,5,0.12,7,0.28,12,0.31,13,1.282,16,0.03,17,0.825,20,2.031,23,2.03,24,0.825,25,0.512,26,0.528,29,0.144,30,0.114,33,1.857,35,0.01,36,0.015,37,0.01,64,1.185,65,1.182,67,1.97,76,1.597,77,1.449,79,0.839,82,1.169,83,2.319,90,1.096,91,2.031,92,1.507,93,1.507,94,1.507,99,2.566,100,1.096,101,1.677,102,2.297,105,1.507,109,3.004,110,3.214,111,1.507,114,1.507,115,1.507,119,1.096,122,2.183,126,0.994,128,0.994,147,2.184,148,2.184,150,3.563,155,3.163,156,1.44,157,1.617,158,1.617,162,2.319,274,2.732,277,1.97,310,2.81,315,3.214,317,1.792,319,2.451,332,1.853,333,2.212,334,2.212,335,2.212,336,2.212,337,2.212]],["title/classes/UpdateAuthorDto.html",[30,0.165,116,1.883]],["body/classes/UpdateAuthorDto.html",[3,0.213,4,0.213,5,0.177,7,0.638,12,0.458,15,1.569,16,0.03,17,0.754,24,0.919,25,0.638,29,0.213,30,0.169,35,0.015,36,0.02,37,0.015,69,2.323,70,0.914,73,2.609,74,1.569,75,3.688,78,3.688,79,0.825,81,3.957,82,1.572,86,3.957,90,1.068,96,1.746,116,2.609,119,1.452,127,2.388,130,1.155,211,1.839,218,1.697,256,2.388,257,1.995,258,2.374,262,2.696,338,4.227,339,3.267,340,3.267,341,2.128,342,2.128,343,2.128,344,2.128,345,3.267]],["title/classes/UpdateBookDto.html",[30,0.165,179,1.883]],["body/classes/UpdateBookDto.html",[3,0.181,4,0.181,5,0.15,7,0.779,12,0.388,15,1.78,16,0.03,17,0.855,24,0.991,25,0.584,29,0.181,30,0.143,35,0.013,36,0.018,37,0.013,69,1.925,70,0.775,74,1.398,77,1.508,79,0.935,90,0.905,119,1.293,130,0.978,159,2.853,161,2.324,162,1.925,163,4.17,174,1.48,179,2.324,184,2.024,211,1.638,218,1.512,257,1.778,258,2.692,262,2.848,264,2.024,265,3.868,266,3.868,341,1.803,342,1.803,343,1.803,344,1.803,346,4.464,347,5.834,348,2.769,349,2.769,350,2.769,351,2.769,352,2.769]],["title/classes/UpdatePublisherDto.html",[30,0.165,315,1.883]],["body/classes/UpdatePublisherDto.html",[3,0.241,4,0.241,5,0.201,7,0.61,12,0.519,15,1.307,16,0.03,17,0.628,24,0.819,25,0.679,29,0.241,30,0.191,35,0.017,36,0.022,37,0.017,70,1.035,74,1.704,79,0.687,82,1.593,90,1.209,119,1.577,130,1.307,162,2.174,211,1.997,218,1.844,257,2.167,258,1.977,262,2.578,274,1.977,276,2.704,277,2.834,315,2.834,319,2.704,341,2.409,342,2.409,343,2.409,344,2.409,353,4.041,354,3.699,355,3.699]],["title/classes/UpdateUserDto.html",[30,0.165,356,1.883]],["body/classes/UpdateUserDto.html",[3,0.279,4,0.279,5,0.232,7,0.541,16,0.03,25,0.669,29,0.279,30,0.221,35,0.02,36,0.024,37,0.02,70,1.198,90,1.4,119,1.73,211,2.191,218,2.023,257,2.378,280,2.288,282,3.13,283,3.11,341,2.788,342,2.788,343,2.788,344,2.788,356,3.11,357,3.587,358,3.13,359,4.282]],["title/classes/User.html",[30,0.165,360,1.883]],["body/classes/User.html",[3,0.314,4,0.314,5,0.261,7,0.608,16,0.028,29,0.314,30,0.293,35,0.022,36,0.026,37,0.022,70,1.345,72,3.131,283,2.824,360,3.335,361,4.028]],["title/controllers/UserController.html",[0,0.765,362,2.087]],["body/controllers/UserController.html",[0,0.962,2,0.775,3,0.143,4,0.143,5,0.119,7,0.277,12,0.307,13,1.273,15,1.71,16,0.031,17,0.822,20,2.021,23,1.849,24,0.949,25,0.612,26,0.523,29,0.143,30,0.113,31,1.288,32,1.288,33,1.849,35,0.01,36,0.015,37,0.01,76,1.59,77,1.566,79,0.835,82,1.163,89,1.428,90,1.089,91,2.021,92,1.497,93,1.497,94,1.497,97,2.623,99,2.56,100,1.089,101,1.379,102,2.021,105,0.985,106,2.169,111,0.985,112,2.169,114,1.497,115,0.985,117,2.169,119,1.089,120,2.169,121,1.428,122,2.289,123,1.428,126,0.985,128,0.985,129,1.428,130,0.775,133,1.428,136,1.428,138,1.602,140,1.428,280,2.83,283,2.843,356,3.283,358,2.435,360,3.205,362,2.169,363,1.837,364,1.837,365,2.192,366,2.192,367,2.192,368,2.192,369,2.192,370,2.153,371,1.837,372,2.192,373,2.192,374,2.192,375,2.192,376,2.192,377,2.192,378,2.192]],["title/modules/UserModule.html",[38,1.133,53,1.883]],["body/modules/UserModule.html",[2,1.788,3,0.26,4,0.26,5,0.216,16,0.03,25,0.703,26,0.951,29,0.26,30,0.206,35,0.018,36,0.023,37,0.018,38,1.965,40,1.791,41,1.791,42,2.13,43,2.13,44,1.791,45,2.972,46,2.13,53,3.625,54,2.705,55,2.13,56,2.13,362,3.621,370,3.298,371,3.339,379,3.339,380,3.339,381,3.985,382,3.985]],["title/injectables/UserService.html",[64,1.133,370,1.713]],["body/injectables/UserService.html",[0,0.801,3,0.144,4,0.144,5,0.12,7,0.28,12,0.31,13,1.282,16,0.03,17,0.825,20,2.031,23,2.03,24,0.825,25,0.512,26,0.528,29,0.144,30,0.114,33,1.857,35,0.01,36,0.015,37,0.01,64,1.185,65,1.182,67,1.97,76,1.597,77,1.449,79,0.839,82,1.169,83,2.319,90,1.096,91,2.031,92,1.507,93,1.507,94,1.507,99,2.566,100,1.096,101,1.677,102,2.297,105,1.507,109,3.004,110,3.214,111,1.507,114,1.507,115,1.507,119,1.096,122,2.183,126,0.994,128,0.994,147,2.184,148,2.184,150,3.563,155,3.163,156,1.44,157,1.617,158,1.617,280,2.732,283,1.97,356,3.214,358,2.451,360,3.564,364,2.81,370,1.792,383,1.853,384,2.212,385,2.212,386,2.212,387,2.212,388,2.212]],["title/coverage.html",[389,3.672]],["body/coverage.html",[0,1.275,1,1.813,5,0.151,6,2.333,16,0.03,19,1.813,27,1.488,30,0.321,35,0.013,36,0.018,37,0.013,44,1.251,64,1.887,66,2.333,69,1.064,71,2.333,79,0.517,87,1.813,88,2.333,96,1.488,101,1.153,116,1.636,124,1.488,146,2.333,159,1.362,160,2.333,162,1.064,171,1.813,172,2.333,174,1.488,179,1.636,182,1.488,196,2.333,216,1.813,255,2.333,256,2.904,263,2.333,264,2.904,274,1.488,275,2.333,276,2.904,280,1.488,281,2.333,282,2.904,284,2.333,285,2.333,305,2.333,308,1.813,309,2.333,315,1.636,317,1.488,332,2.333,338,2.333,346,2.333,353,2.333,356,1.636,357,2.333,360,1.636,361,2.333,362,1.813,363,2.333,370,1.488,383,2.333,389,2.333,390,2.784,391,2.784,392,2.784,393,6.525,394,4.631,395,5.05,396,2.333,397,5.05,398,5.842,399,3.972,400,2.784,401,3.972,402,2.784,403,2.784]],["title/dependencies.html",[41,1.733,404,2.673]],["body/dependencies.html",[16,0.03,26,1.031,35,0.02,36,0.024,37,0.02,41,1.941,130,1.526,217,3.158,219,3.619,220,3.619,221,3.619,405,4.319,406,5.768,407,4.319,408,4.319,409,5.322,410,4.319,411,4.319,412,4.319,413,4.319,414,4.319,415,4.319,416,4.319,417,4.319,418,4.319,419,4.319,420,4.319,421,4.319]],["title/miscellaneous/functions.html",[422,2.239,423,3.232]],["body/miscellaneous/functions.html",[9,3.549,12,0.681,16,0.028,19,3.162,35,0.022,36,0.026,37,0.022,44,2.725,396,4.068,422,4.068,423,4.068,424,4.855,425,4.855]],["title/index.html",[12,0.375,426,2.673,427,2.673]],["body/index.html",[16,0.027,35,0.024,36,0.027,37,0.024]],["title/modules.html",[40,1.969]],["body/modules.html",[16,0.025,35,0.021,36,0.025,37,0.021,39,2.956,40,2.04,50,2.667,51,2.667,52,2.667,53,2.667,428,6.27,429,6.27,430,6.27,431,6.27]],["title/overview.html",[432,3.672]],["body/overview.html",[2,1.25,16,0.029,27,2.807,35,0.016,36,0.021,37,0.016,38,1.25,39,4.179,40,1.59,41,1.59,42,1.891,43,1.891,44,1.59,45,1.891,46,1.891,47,2.965,48,2.965,49,2.965,50,3.417,51,3.417,52,3.417,53,3.417,54,2.504,55,1.891,56,1.891,65,1.891,70,0.99,124,2.807,142,2.965,143,2.965,182,2.807,192,2.965,193,2.965,317,2.807,328,2.965,329,2.965,370,2.807,379,2.965,380,2.965,432,2.965,433,5.252,434,3.539]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0.1.13",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["0cb885721191.json",{"_index":297,"title":{},"body":{"classes/GoogleData.html":{}}}],["1/1",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":434,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["4.1.6",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["4.7.12",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":433,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["7.5.1",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["9.4.2",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":155,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":156,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":220,"title":{},"body":{"injectables/BookService.html":{},"dependencies.html":{}}}],["apiproperty",{"_index":262,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["apiproperty({description",{"_index":258,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["apitags",{"_index":129,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["apitags('authors",{"_index":131,"title":{},"body":{"controllers/AuthorController.html":{}}}],["apitags('books",{"_index":185,"title":{},"body":{"controllers/BookController.html":{}}}],["apitags('publishers",{"_index":320,"title":{},"body":{"controllers/PublisherController.html":{}}}],["apitags('users",{"_index":372,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["app.controller",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":27,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":199,"title":{},"body":{"injectables/BookService.html":{}}}],["author",{"_index":69,"title":{"classes/Author.html":{}},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["author.controller",{"_index":145,"title":{},"body":{"modules/AuthorModule.html":{}}}],["author.dto",{"_index":127,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts",{"_index":256,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["author.dto.ts:13",{"_index":260,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts:15",{"_index":339,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts:21",{"_index":259,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts:23",{"_index":340,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts:29",{"_index":261,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.service",{"_index":125,"title":{},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{}}}],["author/entities/author.entity",{"_index":169,"title":{},"body":{"classes/Book.html":{}}}],["author_id",{"_index":265,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["authorcontroller",{"_index":87,"title":{"controllers/AuthorController.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"coverage.html":{}}}],["authorization",{"_index":300,"title":{},"body":{"classes/GoogleData.html":{}}}],["authormodule",{"_index":50,"title":{"modules/AuthorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":73,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["authorservice",{"_index":124,"title":{"injectables/AuthorService.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":229,"title":{},"body":{"injectables/BookService.html":{}}}],["body",{"_index":120,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":159,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.controller",{"_index":195,"title":{},"body":{"modules/BookModule.html":{}}}],["book.data",{"_index":237,"title":{},"body":{"injectables/BookService.html":{}}}],["book.dto",{"_index":184,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":264,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:13",{"_index":270,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:15",{"_index":351,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:21",{"_index":273,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:23",{"_index":349,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:29",{"_index":269,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:32",{"_index":348,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:37",{"_index":268,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:40",{"_index":350,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:45",{"_index":272,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.exists",{"_index":242,"title":{},"body":{"injectables/BookService.html":{}}}],["book.id",{"_index":239,"title":{},"body":{"injectables/BookService.html":{}}}],["book.service",{"_index":183,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["bookcontroller",{"_index":171,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookdata",{"_index":236,"title":{},"body":{"injectables/BookService.html":{}}}],["bookdata.id",{"_index":238,"title":{},"body":{"injectables/BookService.html":{}}}],["bookmodule",{"_index":51,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookref",{"_index":243,"title":{},"body":{"injectables/BookService.html":{}}}],["bookref.update(updatebookdto",{"_index":246,"title":{},"body":{"injectables/BookService.html":{}}}],["books",{"_index":161,"title":{},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["books.push(bookdata",{"_index":240,"title":{},"body":{"injectables/BookService.html":{}}}],["bookservice",{"_index":182,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"coverage.html":{},"overview.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":431,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":428,"title":{},"body":{"modules.html":{}}}],["class",{"_index":30,"title":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":70,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cloud",{"_index":287,"title":{},"body":{"classes/GoogleData.html":{}}}],["cloud/firestore",{"_index":221,"title":{},"body":{"injectables/BookService.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authormodule",{"_index":142,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_authormodule_providers",{"_index":143,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":192,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":193,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_publishermodule",{"_index":328,"title":{},"body":{"modules/PublisherModule.html":{},"overview.html":{}}}],["cluster_publishermodule_providers",{"_index":329,"title":{},"body":{"modules/PublisherModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":379,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":380,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["connect",{"_index":213,"title":{},"body":{"injectables/BookService.html":{},"classes/GoogleData.html":{}}}],["connection",{"_index":204,"title":{},"body":{"injectables/BookService.html":{}}}],["const",{"_index":227,"title":{},"body":{"injectables/BookService.html":{}}}],["constructor",{"_index":200,"title":{},"body":{"injectables/BookService.html":{}}}],["constructor(private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["containing",{"_index":286,"title":{},"body":{"classes/GoogleData.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["controller('authors",{"_index":132,"title":{},"body":{"controllers/AuthorController.html":{}}}],["controller('books",{"_index":186,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('publishers",{"_index":321,"title":{},"body":{"controllers/PublisherController.html":{}}}],["controller('users",{"_index":373,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":389,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":90,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":133,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["create(createauthordto",{"_index":95,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["create(createbookdto",{"_index":173,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createpublisherdto",{"_index":310,"title":{},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{}}}],["create(createuserdto",{"_index":364,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createauthordto",{"_index":96,"title":{"classes/CreateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["createbookdto",{"_index":174,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createpublisherdto",{"_index":274,"title":{"classes/CreatePublisherDto.html":{}},"body":{"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":280,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":100,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential",{"_index":223,"title":{},"body":{"injectables/BookService.html":{}}}],["data",{"_index":218,"title":{},"body":{"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["data.ts",{"_index":285,"title":{},"body":{"classes/GoogleData.html":{},"coverage.html":{}}}],["data.ts:13",{"_index":301,"title":{},"body":{"classes/GoogleData.html":{}}}],["data.ts:8",{"_index":298,"title":{},"body":{"classes/GoogleData.html":{}}}],["database",{"_index":198,"title":{},"body":{"injectables/BookService.html":{}}}],["declarations",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":292,"title":{},"body":{"classes/GoogleData.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":123,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":112,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["deleting",{"_index":114,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["documentation",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":126,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":128,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":72,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/Publisher.html":{},"classes/User.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":344,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":91,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finding",{"_index":104,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["findone",{"_index":92,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":136,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":105,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firebase",{"_index":219,"title":{},"body":{"injectables/BookService.html":{},"dependencies.html":{}}}],["firebase.credential.cert(googledata.keyjsonfirestore",{"_index":224,"title":{},"body":{"injectables/BookService.html":{}}}],["firebase.firestore",{"_index":226,"title":{},"body":{"injectables/BookService.html":{}}}],["firebase.initializeapp",{"_index":222,"title":{},"body":{"injectables/BookService.html":{}}}],["firestore",{"_index":210,"title":{},"body":{"injectables/BookService.html":{},"classes/GoogleData.html":{}}}],["first",{"_index":81,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["first_name",{"_index":75,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["found",{"_index":252,"title":{},"body":{"injectables/BookService.html":{}}}],["function",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":423,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gcloud",{"_index":302,"title":{},"body":{"classes/GoogleData.html":{}}}],["get(':id",{"_index":106,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["gethello",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":426,"title":{"index.html":{}},"body":{}}],["given",{"_index":110,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["google",{"_index":217,"title":{},"body":{"injectables/BookService.html":{},"classes/GoogleData.html":{},"dependencies.html":{}}}],["googledata",{"_index":216,"title":{"classes/GoogleData.html":{}},"body":{"injectables/BookService.html":{},"classes/GoogleData.html":{},"coverage.html":{}}}],["hello",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["httpcode",{"_index":181,"title":{},"body":{"controllers/BookController.html":{}}}],["httpexception",{"_index":214,"title":{},"body":{"injectables/BookService.html":{}}}],["httpexception('no",{"_index":233,"title":{},"body":{"injectables/BookService.html":{}}}],["httpexception('not",{"_index":251,"title":{},"body":{"injectables/BookService.html":{}}}],["httpstatus",{"_index":215,"title":{},"body":{"injectables/BookService.html":{}}}],["httpstatus.no_content",{"_index":234,"title":{},"body":{"injectables/BookService.html":{}}}],["httpstatus.not_found",{"_index":253,"title":{},"body":{"injectables/BookService.html":{}}}],["id",{"_index":77,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateBookDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["keyjsonfirestore",{"_index":290,"title":{},"body":{"classes/GoogleData.html":{}}}],["last",{"_index":86,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["last_name",{"_index":78,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["legend",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["library",{"_index":295,"title":{},"body":{"classes/GoogleData.html":{}}}],["main",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["matching",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":99,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":422,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mobile",{"_index":296,"title":{},"body":{"classes/GoogleData.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":82,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":342,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["nestjs/platform",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":130,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":101,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["null",{"_index":254,"title":{},"body":{"injectables/BookService.html":{}}}],["number",{"_index":83,"title":{},"body":{"classes/Author.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":211,"title":{},"body":{"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["operations",{"_index":147,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["optional",{"_index":76,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":432,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":404,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":122,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["param('id",{"_index":325,"title":{},"body":{"controllers/PublisherController.html":{}}}],["parameter",{"_index":109,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":341,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createauthordto",{"_index":345,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["partialtype(createbookdto",{"_index":352,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createpublisherdto",{"_index":355,"title":{},"body":{"classes/UpdatePublisherDto.html":{}}}],["partialtype(createuserdto",{"_index":359,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passed",{"_index":148,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["path",{"_index":299,"title":{},"body":{"classes/GoogleData.html":{}}}],["post",{"_index":97,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":197,"title":{},"body":{"injectables/BookService.html":{}}}],["project",{"_index":303,"title":{},"body":{"classes/GoogleData.html":{}}}],["projectid",{"_index":291,"title":{},"body":{"classes/GoogleData.html":{}}}],["properties",{"_index":74,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":304,"title":{},"body":{"classes/GoogleData.html":{}}}],["publisher",{"_index":162,"title":{"classes/Publisher.html":{}},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["publisher.controller",{"_index":331,"title":{},"body":{"modules/PublisherModule.html":{}}}],["publisher.dto",{"_index":319,"title":{},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{}}}],["publisher.dto.ts",{"_index":276,"title":{},"body":{"classes/CreatePublisherDto.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["publisher.dto.ts:13",{"_index":278,"title":{},"body":{"classes/CreatePublisherDto.html":{}}}],["publisher.dto.ts:15",{"_index":354,"title":{},"body":{"classes/UpdatePublisherDto.html":{}}}],["publisher.dto.ts:21",{"_index":279,"title":{},"body":{"classes/CreatePublisherDto.html":{}}}],["publisher.service",{"_index":318,"title":{},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{}}}],["publisher/entities/publisher.entity",{"_index":170,"title":{},"body":{"classes/Book.html":{}}}],["publisher_id",{"_index":266,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["publishercontroller",{"_index":308,"title":{"controllers/PublisherController.html":{}},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"coverage.html":{}}}],["publishermodule",{"_index":52,"title":{"modules/PublisherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PublisherModule.html":{},"modules.html":{},"overview.html":{}}}],["publishers",{"_index":277,"title":{},"body":{"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{}}}],["publisherservice",{"_index":317,"title":{"injectables/PublisherService.html":{}},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"coverage.html":{},"overview.html":{}}}],["put",{"_index":121,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":117,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["reference",{"_index":165,"title":{},"body":{"classes/Book.html":{},"injectables/BookService.html":{}}}],["referenced",{"_index":347,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["referencing",{"_index":267,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["referencjing",{"_index":271,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["reflect",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":93,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":140,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":111,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removed",{"_index":250,"title":{},"body":{"injectables/BookService.html":{}}}],["removes",{"_index":158,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["res",{"_index":245,"title":{},"body":{"injectables/BookService.html":{}}}],["reset",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources/author/author.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/book/book.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/publisher/publisher.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/user/user.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["result",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["services",{"_index":288,"title":{},"body":{"classes/GoogleData.html":{}}}],["setting",{"_index":202,"title":{},"body":{"injectables/BookService.html":{}}}],["snapshot",{"_index":228,"title":{},"body":{"injectables/BookService.html":{}}}],["snapshot.empty",{"_index":231,"title":{},"body":{"injectables/BookService.html":{}}}],["snapshot.foreach((book",{"_index":235,"title":{},"body":{"injectables/BookService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specified",{"_index":108,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/.../main.ts",{"_index":424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/google",{"_index":284,"title":{},"body":{"classes/GoogleData.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/resources/author/author.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthorController.html":{},"coverage.html":{}}}],["src/resources/author/author.controller.ts:28",{"_index":98,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:36",{"_index":103,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:45",{"_index":107,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:55",{"_index":118,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:64",{"_index":113,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.module.ts",{"_index":144,"title":{},"body":{"modules/AuthorModule.html":{}}}],["src/resources/author/author.service.ts",{"_index":146,"title":{},"body":{"injectables/AuthorService.html":{},"coverage.html":{}}}],["src/resources/author/author.service.ts:14",{"_index":149,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:21",{"_index":151,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:29",{"_index":152,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:38",{"_index":154,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:46",{"_index":153,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/dto/create",{"_index":255,"title":{},"body":{"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["src/resources/author/dto/update",{"_index":338,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["src/resources/author/entities/author.entity.ts",{"_index":71,"title":{},"body":{"classes/Author.html":{},"coverage.html":{}}}],["src/resources/author/entities/author.entity.ts:13",{"_index":80,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/author/entities/author.entity.ts:18",{"_index":85,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/author/entities/author.entity.ts:8",{"_index":84,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/book/book.controller.ts",{"_index":172,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/resources/book/book.controller.ts:29",{"_index":175,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:37",{"_index":176,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:46",{"_index":177,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:56",{"_index":180,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:65",{"_index":178,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.module.ts",{"_index":194,"title":{},"body":{"modules/BookModule.html":{}}}],["src/resources/book/book.service.ts",{"_index":196,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/resources/book/book.service.ts:17",{"_index":201,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:34",{"_index":205,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:41",{"_index":206,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:62",{"_index":207,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:75",{"_index":209,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:87",{"_index":208,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/dto/create",{"_index":263,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/resources/book/dto/update",{"_index":346,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/resources/book/entities/book.entity.ts",{"_index":160,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/resources/book/entities/book.entity.ts:11",{"_index":166,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:16",{"_index":168,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:21",{"_index":164,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:26",{"_index":167,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/publisher/dto/create",{"_index":275,"title":{},"body":{"classes/CreatePublisherDto.html":{},"coverage.html":{}}}],["src/resources/publisher/dto/update",{"_index":353,"title":{},"body":{"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts",{"_index":305,"title":{},"body":{"classes/Publisher.html":{},"coverage.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts:13",{"_index":307,"title":{},"body":{"classes/Publisher.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts:8",{"_index":306,"title":{},"body":{"classes/Publisher.html":{}}}],["src/resources/publisher/publisher.controller.ts",{"_index":309,"title":{},"body":{"controllers/PublisherController.html":{},"coverage.html":{}}}],["src/resources/publisher/publisher.controller.ts:28",{"_index":311,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:36",{"_index":312,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:45",{"_index":313,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:55",{"_index":316,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:67",{"_index":314,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.module.ts",{"_index":330,"title":{},"body":{"modules/PublisherModule.html":{}}}],["src/resources/publisher/publisher.service.ts",{"_index":332,"title":{},"body":{"injectables/PublisherService.html":{},"coverage.html":{}}}],["src/resources/publisher/publisher.service.ts:14",{"_index":333,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:21",{"_index":334,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:29",{"_index":335,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:38",{"_index":337,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:46",{"_index":336,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/user/dto/create",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/resources/user/dto/update",{"_index":357,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/resources/user/entities/user.entity.ts",{"_index":361,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/resources/user/user.controller.ts",{"_index":363,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/resources/user/user.controller.ts:28",{"_index":365,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:36",{"_index":366,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:45",{"_index":367,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:55",{"_index":369,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:64",{"_index":368,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.module.ts",{"_index":381,"title":{},"body":{"modules/UserModule.html":{}}}],["src/resources/user/user.service.ts",{"_index":383,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/resources/user/user.service.ts:14",{"_index":384,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:21",{"_index":385,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:29",{"_index":386,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:38",{"_index":388,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:46",{"_index":387,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":427,"title":{"index.html":{}},"body":{}}],["starting",{"_index":425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["statements",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":289,"title":{},"body":{"classes/GoogleData.html":{}}}],["string",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["success",{"_index":249,"title":{},"body":{"injectables/BookService.html":{}}}],["support",{"_index":429,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":430,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["this.appservice.gethello",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authorservice.create(createauthordto",{"_index":134,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findall",{"_index":135,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findone(+id",{"_index":137,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.remove(+id",{"_index":141,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.update(+id",{"_index":139,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.bookservice.create(createbookdto",{"_index":187,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":188,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(id",{"_index":189,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(id",{"_index":191,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(id",{"_index":190,"title":{},"body":{"controllers/BookController.html":{}}}],["this.database",{"_index":225,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').doc(id",{"_index":244,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').doc(id).delete",{"_index":248,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').doc(id).get",{"_index":241,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').get",{"_index":230,"title":{},"body":{"injectables/BookService.html":{}}}],["this.publisherservice.create(createpublisherdto",{"_index":322,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.findall",{"_index":323,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.findone(+id",{"_index":324,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.remove(+id",{"_index":327,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.update(+id",{"_index":326,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.userservice.create(createuserdto",{"_index":374,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":375,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(+id",{"_index":376,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(+id",{"_index":378,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":377,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":232,"title":{},"body":{"injectables/BookService.html":{}}}],["title",{"_index":163,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["transfer",{"_index":257,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["type",{"_index":79,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types",{"_index":343,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["ui",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["up",{"_index":203,"title":{},"body":{"injectables/BookService.html":{}}}],["update",{"_index":94,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":138,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":115,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateauthordto",{"_index":116,"title":{"classes/UpdateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["updatebookdto",{"_index":179,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updated",{"_index":247,"title":{},"body":{"injectables/BookService.html":{}}}],["updatepublisherdto",{"_index":315,"title":{"classes/UpdatePublisherDto.html":{}},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["updates",{"_index":157,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["updateuserdto",{"_index":356,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":119,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["urz",{"_index":294,"title":{},"body":{"classes/GoogleData.html":{}}}],["used",{"_index":212,"title":{},"body":{"injectables/BookService.html":{}}}],["user",{"_index":360,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":382,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":358,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.service",{"_index":371,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":362,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":53,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":370,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":150,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["value",{"_index":293,"title":{},"body":{"classes/GoogleData.html":{}}}],["world",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["zoom",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Main app controller for root route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n                    Function returning hello world\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n/**\n * Main app controller for root route\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Function returning hello world\n   */\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nPublisherModule\n\nPublisherModule\n\nAppModule -->\n\nPublisherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            PublisherModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BookModule } from './resources/book/book.module';\nimport { AuthorModule } from './resources/author/author.module';\nimport { PublisherModule } from './resources/publisher/publisher.module';\nimport { UserModule } from './resources/user/user.module';\n\n@Module({\n  imports: [BookModule, AuthorModule, PublisherModule, UserModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Main app service for app controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:11\n                \n            \n\n\n            \n                \n                    Function returning 'Hello world'\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Main app service for app controller\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Function returning 'Hello world'\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Author.html":{"url":"classes/Author.html","title":"class - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/entities/author.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:13\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:8\n                            \n                        \n\n                \n                    \n                        ID of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:18\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Author {\n  /**\n   * ID of author\n   */\n  id?: number;\n\n  /**\n   * First name of author\n   */\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthorController.html":{"url":"controllers/AuthorController.html","title":"controller - AuthorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/author.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                authors\n            \n\n            \n                Description\n            \n            \n                Controller for authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createAuthorDto: CreateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new author\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorDto\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method finding all authors\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method finding specified author by parameter given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting specified author by parameter given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating specified author by parameters given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for authors\n */\n@ApiTags('Authors')\n@Controller('authors')\nexport class AuthorController {\n  constructor(private readonly authorService: AuthorService) {}\n\n  /**\n   * Method creating new author\n   * @param createAuthorDto\n   */\n  @Post()\n  create(@Body() createAuthorDto: CreateAuthorDto) {\n    return this.authorService.create(createAuthorDto);\n  }\n\n  /**\n   * Method finding all authors\n   */\n  @Get()\n  findAll() {\n    return this.authorService.findAll();\n  }\n\n  /**\n   * Method finding specified author by parameter given\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.authorService.findOne(+id);\n  }\n\n  /**\n   * Method updating specified author by parameters given\n   * @param id\n   * @param updateAuthorDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateAuthorDto: UpdateAuthorDto) {\n    return this.authorService.update(+id, updateAuthorDto);\n  }\n\n  /**\n   * Method deleting specified author by parameter given\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.authorService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorModule.html":{"url":"modules/AuthorModule.html","title":"module - AuthorModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\n\nAuthorService\n\nAuthorService\n\n\n\nAuthorModule\n\nAuthorModule\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/author/author.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { AuthorController } from './author.controller';\n\n@Module({\n  controllers: [AuthorController],\n  providers: [AuthorService],\n})\nexport class AuthorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorService.html":{"url":"injectables/AuthorService.html","title":"injectable - AuthorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/author.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for authors operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createAuthorDto: CreateAuthorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new author using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorDto\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:21\n                \n            \n\n\n            \n                \n                    Method finding all authors\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:29\n                \n            \n\n\n            \n                \n                    Method finding author by given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting author using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating author using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\n\n/**\n * Service for authors operations passed to controller\n */\n@Injectable()\nexport class AuthorService {\n  /**\n   * Method creating new author using given parameter\n   * @param createAuthorDto\n   */\n  create(createAuthorDto: CreateAuthorDto) {\n    return 'This action adds a new author';\n  }\n\n  /**\n   * Method finding all authors\n   */\n  findAll() {\n    return `This action returns all author`;\n  }\n\n  /**\n   * Method finding author by given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} author`;\n  }\n\n  /**\n   * Method updating author using given parameters\n   * @param id\n   * @param updateAuthorDto\n   */\n  update(id: number, updateAuthorDto: UpdateAuthorDto) {\n    return `This action updates a #${id} author`;\n  }\n\n  /**\n   * Method deleting author using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} author`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/entities/book.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Author\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to Author of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:11\n                            \n                        \n\n                \n                    \n                        ID of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Publisher\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to Publisher of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:16\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Author } from '../../author/entities/author.entity';\nimport { Publisher } from '../../publisher/entities/publisher.entity';\n\n/**\n * Entity Class for books\n */\nexport class Book {\n  /**\n   * ID of book\n   */\n  id?: number;\n\n  /**\n   * Title of book\n   */\n  title: string;\n\n  /**\n   * Reference to Author of book\n   */\n  author: Author;\n\n  /**\n   * Reference to Publisher of book\n   */\n  publisher: Publisher;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n            \n                Description\n            \n            \n                Controller for books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:29\n                \n            \n\n\n            \n                \n                    Method creating new book\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:37\n                \n            \n\n\n            \n                \n                    Method returning all books\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:46\n                \n            \n\n\n            \n                \n                    Method returning book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:65\n                \n            \n\n\n            \n                \n                    Method deleting book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:56\n                \n            \n\n\n            \n                \n                    Method updating book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  HttpCode,\n} from '@nestjs/common';\nimport { BookService } from './book.service';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for books\n */\n@ApiTags('Books')\n@Controller('books')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  /**\n   * Method creating new book\n   * @param createBookDto\n   */\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto);\n  }\n\n  /**\n   * Method returning all books\n   */\n  @Get()\n  findAll() {\n    return this.bookService.findAll();\n  }\n\n  /**\n   * Method returning book by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.bookService.findOne(id);\n  }\n\n  /**\n   * Method updating book by ID\n   * @param id\n   * @param updateBookDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(id, updateBookDto);\n  }\n\n  /**\n   * Method deleting book by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.bookService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/book/book.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BookService } from './book.service';\nimport { BookController } from './book.controller';\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/book.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for book operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/resources/book/book.service.ts:17\n                            \n                        \n\n                \n                    \n                            Setting up connection to database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: CreateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:34\n                \n            \n\n\n            \n                \n                    Method creating new book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:41\n                \n            \n\n\n            \n                \n                    Method returning all books\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:62\n                \n            \n\n\n            \n                \n                    Method returning book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:87\n                \n            \n\n\n            \n                \n                    Method deleting book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:75\n                \n            \n\n\n            \n                \n                    Method updating book using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Firestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/book.service.ts:17\n                            \n                        \n\n                \n                    \n                        Firestore object reference used to connect to database\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\nimport { GoogleData } from '../../google-data';\nimport firebase from 'firebase-admin';\nimport { Firestore } from '@google-cloud/firestore';\n\n/**\n * Service for book operations passed to controller\n */\n@Injectable()\nexport class BookService {\n  /**\n   * Firestore object reference used to connect to database\n   * @private\n   */\n  private database: Firestore;\n\n  /**\n   * Setting up connection to database\n   */\n  constructor() {\n    firebase.initializeApp({\n      credential: firebase.credential.cert(GoogleData.keyJsonFirestore),\n    });\n\n    this.database = firebase.firestore();\n  }\n\n  /**\n   * Method creating new book using given parameter\n   * @param createBookDto\n   */\n  create(createBookDto: CreateBookDto) {\n    return 'This action adds a new book';\n  }\n\n  /**\n   * Method returning all books\n   */\n  async findAll() {\n    const books = [];\n    const snapshot = await this.database.collection('books').get();\n\n    if (snapshot.empty) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n\n    snapshot.forEach((book) => {\n      const bookData = book.data();\n      bookData.id = book.id;\n      books.push(bookData);\n    });\n\n    return books;\n  }\n\n  /**\n   * Method returning book using given parameter\n   * @param id\n   */\n  async findOne(id: string) {\n    const book = await this.database.collection('books').doc(id).get();\n    if (!book.exists) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n    return book.data();\n  }\n\n  /**\n   * Method updating book using given parameters\n   * @param id\n   * @param updateBookDto\n   */\n  async update(id: string, updateBookDto: UpdateBookDto) {\n    const bookRef = this.database.collection('books').doc(id);\n\n    const res = await bookRef.update(updateBookDto);\n\n    return { updated: res };\n  }\n\n  /**\n   * Method deleting book using given parameter\n   * @param id\n   */\n  async remove(id: string) {\n    const book = await this.database.collection('books').doc(id).get();\n\n    if (book.exists) {\n      await this.database.collection('books').doc(id).delete();\n      return { success: 'Removed' };\n    } else {\n      throw new HttpException('NOT FOUND', HttpStatus.NOT_FOUND);\n    }\n\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorDto.html":{"url":"classes/CreateAuthorDto.html","title":"class - CreateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/dto/create-author.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                id\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:21\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:13\n                            \n                        \n\n                \n                    \n                        ID of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:29\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating authors\n */\nexport class CreateAuthorDto {\n  /**\n   * ID of author\n   */\n  @ApiProperty({\n    description: 'ID of author',\n  })\n  id: number;\n\n  /**\n   * First name of author\n   */\n  @ApiProperty({\n    description: 'First name of author',\n  })\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  @ApiProperty({\n    description: 'Last name of author',\n  })\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/dto/create-book.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author_id\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                publisher_id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID referencing author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:37\n                            \n                        \n\n                \n                    \n                        ID referencing author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Description of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:29\n                            \n                        \n\n                \n                    \n                        Description of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:13\n                            \n                        \n\n                \n                    \n                        ID of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID referencjing publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:45\n                            \n                        \n\n                \n                    \n                        ID referencjing publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:21\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating books\n */\nexport class CreateBookDto {\n  /**\n   * ID of book\n   */\n  @ApiProperty({\n    description: 'ID of book',\n  })\n  id: number;\n\n  /**\n   * Title of book\n   */\n  @ApiProperty({\n    description: 'Title of book',\n  })\n  title: string;\n\n  /**\n   * Description of book\n   */\n  @ApiProperty({\n    description: 'Description of book',\n  })\n  description: string;\n\n  /**\n   * ID referencing author\n   */\n  @ApiProperty({\n    description: 'ID referencing author',\n  })\n  author_id: string;\n\n  /**\n   * ID referencjing publisher\n   */\n  @ApiProperty({\n    description: 'ID referencjing publisher',\n  })\n  publisher_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePublisherDto.html":{"url":"classes/CreatePublisherDto.html","title":"class - CreatePublisherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePublisherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/dto/create-publisher.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/create-publisher.dto.ts:13\n                            \n                        \n\n                \n                    \n                        ID of publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/create-publisher.dto.ts:21\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating publishers\n */\nexport class CreatePublisherDto {\n  /**\n   * ID of publisher\n   */\n  @ApiProperty({\n    description: 'ID of publisher',\n  })\n  id: number;\n\n  /**\n   * Name of publisher\n   */\n  @ApiProperty({\n    description: 'Name of publisher',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/dto/create-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleData.html":{"url":"classes/GoogleData.html","title":"class - GoogleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/google-data.ts\n        \n\n            \n                Description\n            \n            \n                Class containing data to connect to google cloud services\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                keyJsonFirestore\n                            \n                            \n                                    Static\n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            keyJsonFirestore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'urz-library-mobile-0cb885721191.json'\n                        \n                    \n                        \n                            \n                                    Defined in src/google-data.ts:8\n                            \n                        \n\n                \n                    \n                        Path to authorization data for Firestore\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'urz-library-mobile'\n                        \n                    \n                        \n                            \n                                    Defined in src/google-data.ts:13\n                            \n                        \n\n                \n                    \n                        Name of GCloud project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GoogleData {\n  /**\n   * Path to authorization data for Firestore\n   */\n  public static keyJsonFirestore = 'urz-library-mobile-0cb885721191.json';\n\n  /**\n   * Name of GCloud project\n   */\n  public static projectId = 'urz-library-mobile';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Publisher.html":{"url":"classes/Publisher.html","title":"class - Publisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Publisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/entities/publisher.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/entities/publisher.entity.ts:8\n                            \n                        \n\n                \n                    \n                        ID of publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/entities/publisher.entity.ts:13\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Publisher {\n  /**\n   * ID of publisher\n   */\n  id?: number;\n\n  /**\n   * Name of publisher\n   */\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PublisherController.html":{"url":"controllers/PublisherController.html","title":"controller - PublisherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PublisherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/publisher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                publishers\n            \n\n            \n                Description\n            \n            \n                Controller for publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPublisherDto: CreatePublisherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new publisher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublisherDto\n                                    \n                                                CreatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all publishers\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:67\n                \n            \n\n\n            \n                \n                    Method deleting publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePublisherDto: UpdatePublisherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublisherDto\n                                    \n                                                UpdatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PublisherService } from './publisher.service';\nimport { CreatePublisherDto } from './dto/create-publisher.dto';\nimport { UpdatePublisherDto } from './dto/update-publisher.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for publishers\n */\n@ApiTags('Publishers')\n@Controller('publishers')\nexport class PublisherController {\n  constructor(private readonly publisherService: PublisherService) {}\n\n  /**\n   * Method creating new publisher\n   * @param createPublisherDto\n   */\n  @Post()\n  create(@Body() createPublisherDto: CreatePublisherDto) {\n    return this.publisherService.create(createPublisherDto);\n  }\n\n  /**\n   * Method returning all publishers\n   */\n  @Get()\n  findAll() {\n    return this.publisherService.findAll();\n  }\n\n  /**\n   * Method returning publisher by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.publisherService.findOne(+id);\n  }\n\n  /**\n   * Method updating publisher by ID\n   * @param id\n   * @param updatePublisherDto\n   */\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updatePublisherDto: UpdatePublisherDto,\n  ) {\n    return this.publisherService.update(+id, updatePublisherDto);\n  }\n\n  /**\n   * Method deleting publisher by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.publisherService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublisherModule.html":{"url":"modules/PublisherModule.html","title":"module - PublisherModule","body":"\n                   \n\n\n\n\n    Modules\n    PublisherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublisherModule\n\n\n\ncluster_PublisherModule_providers\n\n\n\n\nPublisherService\n\nPublisherService\n\n\n\nPublisherModule\n\nPublisherModule\n\nPublisherModule -->\n\nPublisherService->PublisherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/publisher/publisher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PublisherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PublisherController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PublisherService } from './publisher.service';\nimport { PublisherController } from './publisher.controller';\n\n@Module({\n  controllers: [PublisherController],\n  providers: [PublisherService],\n})\nexport class PublisherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublisherService.html":{"url":"injectables/PublisherService.html","title":"injectable - PublisherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PublisherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/publisher.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for publisher operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPublisherDto: CreatePublisherDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublisherDto\n                                    \n                                                CreatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:21\n                \n            \n\n\n            \n                \n                    Method returning all publishers\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:29\n                \n            \n\n\n            \n                \n                    Method returning publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePublisherDto: UpdatePublisherDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating publisher using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublisherDto\n                                    \n                                                UpdatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePublisherDto } from './dto/create-publisher.dto';\nimport { UpdatePublisherDto } from './dto/update-publisher.dto';\n\n/**\n * Service for publisher operations passed to controller\n */\n@Injectable()\nexport class PublisherService {\n  /**\n   * Method creating new publisher using given parameter\n   * @param createPublisherDto\n   */\n  create(createPublisherDto: CreatePublisherDto) {\n    return 'This action adds a new publisher';\n  }\n\n  /**\n   * Method returning all publishers\n   */\n  findAll() {\n    return `This action returns all publisher`;\n  }\n\n  /**\n   * Method returning publisher using given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} publisher`;\n  }\n\n  /**\n   * Method updating publisher using given parameters\n   * @param id\n   * @param updatePublisherDto\n   */\n  update(id: number, updatePublisherDto: UpdatePublisherDto) {\n    return `This action updates a #${id} publisher`;\n  }\n\n  /**\n   * Method deleting publisher using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} publisher`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthorDto.html":{"url":"classes/UpdateAuthorDto.html","title":"class - UpdateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/dto/update-author.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/update-author.dto.ts:15\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/update-author.dto.ts:23\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthorDto } from './create-author.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating authors\n */\nexport class UpdateAuthorDto extends PartialType(CreateAuthorDto) {\n  /**\n   * First name of author\n   */\n  @ApiProperty({\n    description: 'First name of author',\n  })\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  @ApiProperty({\n    description: 'Last name of author',\n  })\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/dto/update-book.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author_id\n                            \n                            \n                                description\n                            \n                            \n                                publisher_id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Author referenced by ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:32\n                            \n                        \n\n                \n                    \n                        Author referenced by ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Description of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:23\n                            \n                        \n\n                \n                    \n                        Description of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Publisher referenced by ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:40\n                            \n                        \n\n                \n                    \n                        Publisher referenced by ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:15\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBookDto } from './create-book.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating books\n */\nexport class UpdateBookDto extends PartialType(CreateBookDto) {\n  /**\n   * Title of book\n   */\n  @ApiProperty({\n    description: 'Title of book',\n  })\n  title: string;\n\n  /**\n   * Description of book\n   */\n  @ApiProperty({\n    description: 'Description of book',\n  })\n  description: string;\n\n\n  /**\n   * Author referenced by ID\n   */\n  @ApiProperty({\n    description: 'Author referenced by ID',\n  })\n  author_id: string;\n\n  /**\n   * Publisher referenced by ID\n   */\n  @ApiProperty({\n    description: 'Publisher referenced by ID',\n  })\n  publisher_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePublisherDto.html":{"url":"classes/UpdatePublisherDto.html","title":"class - UpdatePublisherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePublisherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/dto/update-publisher.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/update-publisher.dto.ts:15\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePublisherDto } from './create-publisher.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating publishers\n */\nexport class UpdatePublisherDto extends PartialType(CreatePublisherDto) {\n  /**\n   * Name of publisher\n   */\n  @ApiProperty({\n    description: 'Name of publisher',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/dto/update-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\n/**\n * Data Transfer Object for updating users\n */\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/entities/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n            \n                Description\n            \n            \n                Controller for users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all users\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for users\n */\n@ApiTags('Users')\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n   * Method creating new user\n   * @param createUserDto\n   */\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  /**\n   * Method returning all users\n   */\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  /**\n   * Method returning user by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  /**\n   * Method updating user by ID\n   * @param id\n   * @param updateUserDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  /**\n   * Method deleting user by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for user operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:21\n                \n            \n\n\n            \n                \n                    Method returning all users\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Method returning user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating user using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n/**\n * Service for user operations passed to controller\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Method creating new user using given parameter\n   * @param createUserDto\n   */\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  /**\n   * Method returning all users\n   */\n  findAll() {\n    return `This action returns all user`;\n  }\n\n  /**\n   * Method returning user using given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  /**\n   * Method updating user using given parameters\n   * @param id\n   * @param updateUserDto\n   */\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  /**\n   * Method deleting user using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/google-data.ts\n            \n            class\n            GoogleData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/author/author.controller.ts\n            \n            controller\n            AuthorController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/author/author.service.ts\n            \n            injectable\n            AuthorService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/author/dto/create-author.dto.ts\n            \n            class\n            CreateAuthorDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/resources/author/dto/update-author.dto.ts\n            \n            class\n            UpdateAuthorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/author/entities/author.entity.ts\n            \n            class\n            Author\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/resources/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/resources/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/resources/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/resources/publisher/dto/create-publisher.dto.ts\n            \n            class\n            CreatePublisherDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/publisher/dto/update-publisher.dto.ts\n            \n            class\n            UpdatePublisherDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/resources/publisher/entities/publisher.entity.ts\n            \n            class\n            Publisher\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/publisher/publisher.controller.ts\n            \n            controller\n            PublisherController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/publisher/publisher.service.ts\n            \n            injectable\n            PublisherService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/firestore : ^4.8.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.12\n        \n            firebase-admin : ^9.4.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    *\nFunction starting app\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublisherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_PublisherModule\n\n\n\ncluster_PublisherModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nPublisherModule\n\nPublisherModule\n\nAppModule -->\n\nPublisherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\nPublisherService\n\nPublisherService\n\nPublisherModule -->\n\nPublisherService->PublisherModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
