var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.821,1,2.142]],["body/controllers/AppController.html",[0,1.488,1,3.341,2,1.448,3,0.239,4,0.199,5,0.199,6,3.34,7,0.461,8,4.273,9,3.341,10,5.082,11,5.082,12,0.563,13,1.997,14,4.966,15,1.345,16,0.029,17,0.673,18,3.973,19,3.341,20,2.332,21,4.273,22,4.273,23,1.448,24,0.936,25,0.59,26,0.859,27,3.041,28,3.34,29,0.239,30,0.193,31,1.823,32,2.363,33,1.448,34,3.973,35,0.017,36,0.022,37,0.017]],["title/modules/AppModule.html",[38,1.025,39,2.142]],["body/modules/AppModule.html",[1,3.38,2,1.651,3,0.201,4,0.167,5,0.167,16,0.029,25,0.719,26,0.721,27,3.227,28,2.804,29,0.201,30,0.162,35,0.014,36,0.019,37,0.014,38,1.617,39,4.333,40,1.415,41,1.415,42,1.661,43,1.661,44,1.415,45,2.56,46,1.661,47,2.804,48,2.804,49,2.804,50,3.537,51,3.537,52,3.537,53,3.537,54,3.537,55,2.255,56,1.661,57,1.661,58,3.335,59,4.529,60,3.335,61,3.335,62,3.335,63,3.335,64,3.335,65,3.335]],["title/injectables/AppService.html",[27,1.768,66,1.025]],["body/injectables/AppService.html",[0,1.313,3,0.249,4,0.207,5,0.207,7,0.48,8,4.38,9,3.939,12,0.585,13,2.047,14,5.038,16,0.029,17,0.7,19,3.424,20,2.391,21,4.797,22,4.797,23,1.506,24,0.96,25,0.48,26,0.893,27,2.827,29,0.249,30,0.201,33,1.506,35,0.018,36,0.022,37,0.018,66,1.639,67,2.057,68,3.473,69,2.827,70,4.131]],["title/classes/Author.html",[30,0.158,71,1.188]],["body/classes/Author.html",[3,0.239,4,0.199,5,0.199,7,0.46,12,0.561,16,0.029,17,0.948,24,1.087,29,0.239,30,0.246,35,0.017,36,0.022,37,0.017,71,2.342,72,1.157,73,3.328,74,2.602,75,2.354,76,1.482,77,4.116,78,1.849,79,1.918,80,4.116,81,1.031,82,3.959,83,3.731,84,1.601,85,2.751,86,3.959,87,3.959,88,3.731]],["title/controllers/AuthorController.html",[0,0.821,89,2.142]],["body/controllers/AuthorController.html",[0,1.067,2,0.858,3,0.142,4,0.118,5,0.118,7,0.273,12,0.333,13,1.387,15,1.706,16,0.029,17,0.854,23,1.837,24,1.063,25,0.585,26,0.509,29,0.142,30,0.114,31,1.08,32,1.399,33,1.837,35,0.01,36,0.015,37,0.01,71,2.057,75,2.997,78,1.715,79,1.815,81,0.867,84,1.277,89,2.32,90,1.978,91,1.547,92,1.195,93,2.159,94,1.619,95,1.619,96,1.619,97,1.978,98,2.977,99,2.783,100,2.353,101,2.697,102,1.195,103,1.497,104,2.428,105,2.353,106,3.954,107,1.08,108,2.32,109,2.353,110,5.291,111,2.797,112,3.147,113,1.08,114,2.32,115,2.353,116,1.619,117,1.08,118,3.432,119,2.32,120,2.353,121,1.195,122,2.32,123,1.547,124,2.428,125,1.547,126,2.297,127,1.978,128,1.08,129,2.596,130,1.08,131,1.547,132,0.797,133,2.353,134,2.353,135,1.547,136,2.353,137,2.353,138,1.547,139,2.353,140,1.731,141,2.353,142,1.547,143,2.353]],["title/modules/AuthorModule.html",[38,1.025,50,1.938]],["body/modules/AuthorModule.html",[2,1.861,3,0.241,4,0.201,5,0.201,16,0.028,25,0.688,26,0.865,29,0.241,30,0.194,35,0.017,36,0.022,37,0.017,38,1.769,40,1.697,41,1.697,42,1.992,43,1.992,44,1.697,45,2.8,46,1.992,50,3.829,55,2.542,56,1.992,57,1.992,89,3.696,126,3.395,127,3.363,144,3.363,145,3.363,146,2.281,147,4.001,148,4.001,149,2.171]],["title/injectables/AuthorService.html",[66,1.025,126,1.768]],["body/injectables/AuthorService.html",[0,0.728,3,0.11,4,0.091,5,0.091,7,0.211,12,0.257,13,1.136,16,0.029,17,0.846,23,1.632,24,0.984,25,0.52,26,0.393,29,0.11,30,0.088,31,0.834,33,1.632,35,0.008,36,0.012,37,0.008,66,0.909,67,0.905,69,1.568,71,2.038,75,2.834,76,0.845,78,1.632,79,1.499,81,0.878,84,1.215,92,0.979,93,1.882,94,1.327,95,1.327,96,1.327,97,2.43,98,2.586,101,2.513,102,0.979,103,1.898,104,2.293,106,3.447,107,1.327,111,2.834,112,3.084,113,1.327,116,1.327,117,1.327,118,3.084,121,0.979,124,2.187,126,1.568,128,0.834,129,2.127,130,0.834,146,1.495,149,0.986,150,1.528,151,1.9,152,1.9,153,2.695,154,3.284,155,4.353,156,1.195,157,1.338,158,2.891,159,2.127,160,1.9,161,2.648,162,1.818,163,3.132,164,1.818,165,1.818,166,1.818,167,1.818,168,2.661,169,1.054,170,1.719,171,2.127,172,1.9,173,1.338,174,1.338,175,0.986,176,1.081,177,2.127,178,1.338,179,3.815,180,3.506,181,1.818,182,1.818,183,1.338,184,2.891,185,1.338,186,1.818,187,1.338,188,2.648,189,2.127,190,0.909,191,2.127,192,1.818,193,1.818,194,2.891,195,1.818,196,1.818,197,2.891,198,2.891,199,1.818,200,1.818,201,2.127,202,1.818,203,1.338,204,1.818,205,1.338,206,1.338,207,1.338,208,1.338,209,1.338]],["title/classes/Book.html",[30,0.158,210,1.623]],["body/classes/Book.html",[3,0.166,4,0.138,5,0.138,7,0.669,12,0.389,15,0.931,16,0.029,17,0.999,24,1.03,25,0.538,29,0.166,30,0.225,35,0.012,36,0.017,37,0.012,71,2.15,72,0.804,74,2.601,76,1.156,78,1.442,79,1.689,81,1.087,85,3.308,132,0.931,170,3.014,210,3.198,211,2.311,212,3.014,213,3.41,214,2.318,215,3.41,216,3.41,217,3.951,218,2.75,219,2.75,220,2.911,221,2.911,222,2.75,223,2.75,224,2.75,225,1.369,226,3.729,227,3.729,228,2.75,229,2.911,230,2.911,231,2.911,232,2.911,233,2.75,234,2.911,235,2.75,236,2.75,237,2.75,238,1.97]],["title/controllers/BookController.html",[0,0.821,239,2.142]],["body/controllers/BookController.html",[0,1.083,2,0.88,3,0.145,4,0.121,5,0.121,7,0.28,12,0.342,13,1.413,15,1.724,16,0.029,17,0.863,20,2.185,23,1.857,24,1.07,25,0.591,26,0.522,29,0.145,30,0.117,31,1.107,32,1.435,33,1.857,35,0.01,36,0.015,37,0.01,78,1.736,79,1.966,81,0.877,84,1.293,91,1.586,92,1.217,93,2.185,94,1.65,95,1.65,96,1.65,99,2.825,101,2.714,102,1.217,103,1.525,104,2.185,107,1.107,108,2.363,113,1.107,114,2.363,116,1.65,117,1.107,119,2.363,121,1.217,122,2.363,123,1.586,124,2.451,125,1.586,128,1.107,130,1.107,131,1.586,132,0.817,135,1.586,138,1.586,140,1.775,142,1.586,210,2.831,212,3.029,239,2.363,240,2.028,241,2.028,242,3.002,243,2.413,244,2.413,245,2.413,246,2.413,247,3.455,248,2.413,249,2.332,250,2.028,251,2.645,252,2.413,253,2.413,254,2.413,255,2.413,256,2.413,257,2.413,258,2.413]],["title/modules/BookModule.html",[38,1.025,51,1.938]],["body/modules/BookModule.html",[2,1.917,3,0.253,4,0.21,5,0.21,16,0.028,25,0.667,26,0.906,29,0.253,30,0.204,35,0.018,36,0.022,37,0.018,38,1.807,40,1.778,41,1.778,42,2.087,43,2.087,44,1.778,45,2.86,46,2.087,51,3.765,55,2.618,56,2.087,57,2.087,239,3.776,249,3.435,250,3.523,259,3.523,260,3.523,261,4.191,262,4.191]],["title/injectables/BookService.html",[66,1.025,249,1.768]],["body/injectables/BookService.html",[0,0.728,3,0.11,4,0.091,5,0.091,7,0.211,12,0.257,13,1.136,16,0.029,17,0.846,20,1.882,23,1.632,24,0.984,25,0.52,26,0.393,29,0.11,30,0.088,31,0.834,33,1.632,35,0.008,36,0.012,37,0.008,66,0.909,67,0.905,69,1.568,76,0.845,78,1.632,79,1.499,81,0.878,84,1.215,92,0.979,93,1.882,94,1.327,95,1.327,96,1.327,101,2.513,102,0.979,103,1.898,104,2.293,107,1.327,111,2.834,112,3.084,113,1.327,116,1.327,117,1.327,121,0.979,124,2.187,128,0.834,130,0.834,146,1.495,149,0.986,151,1.9,152,1.9,153,2.695,154,3.284,155,4.353,156,1.195,157,1.338,159,2.127,160,1.9,161,2.648,163,3.409,168,2.661,169,1.054,170,1.719,171,2.127,172,1.9,173,1.338,174,1.338,175,0.986,176,1.081,177,1.338,178,1.338,179,3.815,180,3.506,183,1.338,185,1.338,187,1.338,188,2.648,189,2.127,190,0.909,191,2.127,201,2.127,203,1.338,205,1.338,206,1.338,207,1.338,208,1.338,209,1.338,210,2.875,212,2.439,241,2.43,242,2.586,247,3.084,249,1.568,251,2.127,263,1.528,264,2.891,265,1.818,266,1.818,267,1.818,268,1.818,269,1.818,270,1.818,271,2.891,272,1.818,273,1.818,274,1.818,275,2.891,276,1.818,277,1.818,278,2.891,279,2.891,280,1.818,281,1.818,282,1.818,283,1.818]],["title/classes/CreateAuthorDto.html",[30,0.158,98,1.768]],["body/classes/CreateAuthorDto.html",[3,0.22,4,0.184,5,0.184,7,0.625,12,0.518,15,1.63,16,0.029,17,0.815,24,1.054,25,0.424,29,0.22,30,0.178,35,0.016,36,0.02,37,0.016,71,2.303,72,1.068,75,2.863,76,1.407,77,3.961,80,3.961,81,0.887,83,4.21,84,1.715,88,4.21,98,2.612,102,1.63,132,1.237,169,1.755,190,1.514,225,2.397,238,2.681,284,4.526,285,2.689,286,2.209,287,3.655,288,3.655]],["title/classes/CreateBookDto.html",[30,0.158,242,1.768]],["body/classes/CreateBookDto.html",[3,0.147,4,0.123,5,0.123,7,0.727,12,0.346,15,1.881,16,0.029,17,0.941,24,1.093,25,0.284,29,0.147,30,0.119,35,0.01,36,0.015,37,0.01,71,1.747,72,0.714,76,1.061,79,1.795,81,1.023,85,3.307,102,1.229,132,0.827,169,1.323,190,1.142,210,3.034,212,3.191,213,3.186,214,1.883,215,3.186,216,3.186,217,4.087,220,3.526,221,3.526,225,2.766,226,3.526,227,3.526,229,2.67,230,2.67,231,2.67,232,2.67,234,3.526,238,2.842,242,1.969,286,1.666,289,4.797,290,1.798,291,3.64,292,3.64,293,4.793,294,2.444,295,2.444,296,2.444,297,4.793,298,2.444,299,2.444,300,2.444,301,2.444]],["title/classes/CreatePublisherDto.html",[30,0.158,302,1.768]],["body/classes/CreatePublisherDto.html",[3,0.248,4,0.207,5,0.207,7,0.604,12,0.583,15,1.393,16,0.029,17,0.697,24,0.958,25,0.478,29,0.248,30,0.2,35,0.017,36,0.022,37,0.017,72,1.203,76,1.519,81,0.758,84,1.737,102,1.76,132,1.393,169,1.895,190,1.635,214,2.352,225,2.049,238,2.588,286,2.385,302,2.82,303,4.37,304,3.028,305,3.091,306,4.116]],["title/classes/CreateUserDto.html",[30,0.158,307,1.768]],["body/classes/CreateUserDto.html",[3,0.295,4,0.246,5,0.246,7,0.568,16,0.026,29,0.295,30,0.238,35,0.021,36,0.025,37,0.021,72,1.429,102,1.656,169,1.783,190,1.538,286,2.244,307,3.134,308,4.111,309,3.598,310,2.908]],["title/modules/DatabaseModule.html",[38,1.025,52,1.938]],["body/modules/DatabaseModule.html",[3,0.249,4,0.207,5,0.207,16,0.028,25,0.605,26,0.893,29,0.249,30,0.201,35,0.018,36,0.022,37,0.018,38,1.795,40,1.752,41,1.752,42,2.057,43,2.057,44,1.752,45,2.841,46,2.841,52,3.809,55,2.594,56,2.057,57,2.057,146,2.428,311,3.473,312,4.131,313,3.473,314,4.131,315,4.38,316,4.131]],["title/injectables/DatabaseService.html",[66,1.025,146,1.188]],["body/injectables/DatabaseService.html",[3,0.206,4,0.171,5,0.171,7,0.397,12,0.484,16,0.029,17,0.881,23,1.245,25,0.647,26,0.738,29,0.206,30,0.166,33,1.245,35,0.014,36,0.02,37,0.014,66,1.447,67,1.7,69,2.497,76,1.345,81,0.629,146,1.678,153,3.66,154,4.145,156,3.421,160,3.025,168,3.095,170,2.736,175,2.497,176,2.031,190,1.074,315,3.868,317,2.871,318,4.602,319,5.204,320,4.602,321,3.415,322,4.602,323,4.887,324,3.415,325,3.415,326,3.415,327,4.602,328,4.602,329,2.871,330,2.245,331,4.602,332,3.415,333,3.415,334,3.415,335,3.415]],["title/classes/GoogleData.html",[30,0.158,330,2.142]],["body/classes/GoogleData.html",[3,0.224,4,0.186,5,0.186,7,0.431,12,0.526,16,0.028,17,0.824,24,0.896,29,0.224,30,0.236,35,0.016,36,0.021,37,0.016,72,1.086,76,1.422,81,0.896,84,1.321,168,2.894,172,2.442,175,2.015,190,1.707,330,3.198,336,4.562,337,3.123,338,3.715,339,3.715,340,3.715,341,6.134,342,5.427,343,5.427,344,4.866,345,4.866,346,5.759,347,5.759,348,5.759,349,4.866,350,3.715,351,4.866,352,4.866,353,3.715,354,4.866,355,4.091,356,4.866]],["title/classes/Publisher.html",[30,0.158,214,1.28]],["body/classes/Publisher.html",[3,0.256,4,0.214,5,0.214,7,0.494,12,0.602,16,0.028,17,0.899,24,0.978,29,0.256,30,0.258,35,0.018,36,0.023,37,0.018,72,1.243,74,2.796,76,1.551,78,1.935,79,1.96,81,0.978,84,1.692,85,2.879,214,2.497,305,2.53,357,3.576,358,4.254,359,4.254]],["title/controllers/PublisherController.html",[0,0.821,360,2.142]],["body/controllers/PublisherController.html",[0,1.08,2,0.876,3,0.145,4,0.121,5,0.121,7,0.279,12,0.34,13,1.408,15,1.721,16,0.029,17,0.861,20,2.181,23,1.854,24,1.069,25,0.59,26,0.52,29,0.145,30,0.117,31,1.103,32,1.429,33,1.854,35,0.01,36,0.015,37,0.01,78,1.733,79,1.965,81,0.876,84,1.29,91,1.579,92,1.213,93,2.181,94,1.645,95,1.645,96,1.967,99,2.818,101,2.711,102,1.213,103,1.52,104,2.181,107,1.103,108,2.356,113,1.103,114,2.356,116,1.645,117,1.103,119,2.356,121,1.213,122,2.356,123,1.579,124,2.447,125,1.579,128,1.103,130,1.103,131,1.579,132,0.813,135,1.579,138,1.579,142,1.579,214,2.231,302,2.998,305,3.024,360,2.356,361,2.02,362,2.02,363,2.403,364,2.403,365,2.403,366,2.403,367,3.452,368,2.403,369,2.326,370,2.02,371,2.637,372,2.403,373,2.403,374,2.403,375,2.403,376,2.403,377,2.403,378,2.403,379,2.403]],["title/modules/PublisherModule.html",[38,1.025,53,1.938]],["body/modules/PublisherModule.html",[2,1.861,3,0.241,4,0.201,5,0.201,16,0.028,25,0.688,26,0.865,29,0.241,30,0.194,35,0.017,36,0.022,37,0.017,38,1.769,40,1.697,41,1.697,42,1.992,43,1.992,44,1.697,45,2.8,46,1.992,53,3.829,55,2.542,56,1.992,57,1.992,146,2.281,149,2.171,360,3.696,369,3.395,370,3.363,380,3.363,381,3.363,382,4.001,383,4.001]],["title/injectables/PublisherService.html",[66,1.025,369,1.768]],["body/injectables/PublisherService.html",[0,0.723,3,0.109,4,0.09,5,0.09,7,0.209,12,0.255,13,1.127,16,0.029,17,0.843,20,1.872,23,1.624,24,0.981,25,0.517,26,0.389,29,0.109,30,0.088,31,0.826,33,1.624,35,0.008,36,0.012,37,0.008,66,0.902,67,0.897,69,1.557,76,0.838,78,1.624,79,1.493,81,0.874,84,1.209,92,0.971,93,1.872,94,1.317,95,1.317,96,1.317,101,2.505,102,0.971,103,1.889,104,2.284,107,1.317,111,2.822,112,3.073,113,1.317,116,1.317,117,1.317,121,0.971,124,2.178,128,0.826,130,0.826,146,1.487,149,0.977,151,1.886,152,1.886,153,2.681,154,3.272,155,4.344,156,1.184,157,1.325,159,2.111,160,1.886,161,2.631,163,3.397,168,2.649,169,1.046,170,1.706,171,2.111,172,1.886,173,1.325,174,1.325,175,0.977,176,1.071,177,3.001,178,1.325,179,3.802,180,3.491,183,1.325,185,1.325,187,1.325,188,2.631,189,2.111,190,0.902,191,2.111,201,2.111,203,1.325,205,1.325,206,1.325,207,1.325,208,1.325,209,1.325,214,2.263,302,2.575,305,2.426,362,2.412,367,3.073,369,1.557,371,2.111,384,1.514,385,2.869,386,1.801,387,1.801,388,1.801,389,1.801,390,1.801,391,3.576,392,1.801,393,2.869,394,1.801,395,1.801,396,1.801,397,2.869,398,1.801,399,1.801,400,2.869,401,2.869,402,1.801,403,1.801,404,1.801,405,1.801]],["title/classes/UpdateAuthorDto.html",[30,0.158,118,1.938]],["body/classes/UpdateAuthorDto.html",[3,0.211,4,0.176,5,0.176,7,0.612,12,0.495,15,1.583,16,0.029,17,0.792,24,1.036,25,0.612,29,0.211,30,0.17,35,0.015,36,0.02,37,0.015,71,2.281,72,1.022,75,2.781,76,1.367,77,3.876,80,3.876,81,0.862,83,4.137,84,1.699,88,4.137,92,1.184,98,1.898,118,2.781,121,1.583,129,2.574,132,1.184,169,1.705,190,1.471,225,2.329,238,2.623,285,2.574,286,2.146,406,4.429,407,3.499,408,3.499,409,2.3,410,2.3,411,2.3,412,2.3,413,3.499]],["title/classes/UpdateBookDto.html",[30,0.158,247,1.938]],["body/classes/UpdateBookDto.html",[3,0.143,4,0.119,5,0.119,7,0.724,12,0.336,15,1.863,16,0.029,17,0.932,24,1.085,25,0.494,29,0.143,30,0.115,35,0.01,36,0.015,37,0.01,71,1.722,72,0.693,76,1.038,79,1.779,81,1.014,85,3.286,92,0.803,121,1.202,132,0.803,169,1.295,190,1.117,210,3.016,212,3.156,213,3.13,214,1.856,215,3.13,216,3.13,217,4.048,220,3.475,221,3.475,225,2.74,226,3.475,227,3.475,229,2.612,230,2.612,231,2.612,232,2.612,234,3.475,238,2.817,242,1.287,247,2.112,251,1.746,286,1.629,290,1.746,291,3.577,292,3.577,409,1.56,410,1.56,411,1.56,412,1.56,414,4.756,415,5.658,416,2.373,417,2.373,418,2.373,419,2.373,420,2.373,421,2.373,422,2.373,423,2.373]],["title/classes/UpdatePublisherDto.html",[30,0.158,367,1.938]],["body/classes/UpdatePublisherDto.html",[3,0.236,4,0.197,5,0.197,7,0.585,12,0.555,15,1.327,16,0.029,17,0.664,24,0.928,25,0.647,29,0.236,30,0.19,35,0.017,36,0.021,37,0.017,72,1.145,76,1.472,81,0.722,84,1.718,92,1.327,121,1.705,132,1.327,169,1.837,190,1.585,214,2.309,225,1.951,238,2.508,286,2.312,302,2.126,304,2.883,305,2.996,367,2.996,371,2.883,409,2.575,410,2.575,411,2.575,412,2.575,424,4.235,425,3.918,426,3.918]],["title/classes/UpdateUserDto.html",[30,0.158,427,1.938]],["body/classes/UpdateUserDto.html",[3,0.269,4,0.224,5,0.224,7,0.519,16,0.028,25,0.635,29,0.269,30,0.217,35,0.019,36,0.023,37,0.019,72,1.306,92,1.513,121,1.852,169,1.995,190,1.721,286,2.511,307,2.425,309,3.288,310,3.254,409,2.938,410,2.938,411,2.938,412,2.938,427,3.254,428,3.758,429,3.288,430,4.47]],["title/classes/User.html",[30,0.158,431,1.938]],["body/classes/User.html",[3,0.299,4,0.249,5,0.249,7,0.575,16,0.026,29,0.299,30,0.283,35,0.021,36,0.025,37,0.021,72,1.448,74,3.256,310,2.946,431,3.461,432,4.165]],["title/controllers/UserController.html",[0,0.821,433,2.142]],["body/controllers/UserController.html",[0,1.083,2,0.88,3,0.145,4,0.121,5,0.121,7,0.28,12,0.342,13,1.413,15,1.724,16,0.029,17,0.863,20,2.185,23,1.857,24,1.07,25,0.591,26,0.522,29,0.145,30,0.117,31,1.107,32,1.435,33,1.857,35,0.01,36,0.015,37,0.01,78,1.736,79,1.966,81,0.877,84,1.293,91,1.586,92,1.217,93,2.185,94,1.65,95,1.65,96,1.65,99,2.825,101,2.714,102,1.217,103,1.525,104,2.185,107,1.107,108,2.363,113,1.107,114,2.363,116,1.65,117,1.107,119,2.363,121,1.217,122,2.363,123,1.586,124,2.451,125,1.586,128,1.107,130,1.107,131,1.586,132,0.817,135,1.586,138,1.586,140,1.775,142,1.586,307,3.002,310,3.029,427,3.455,429,2.645,431,3.381,433,2.363,434,2.028,435,2.028,436,2.413,437,2.413,438,2.413,439,2.413,440,2.413,441,2.332,442,2.028,443,2.413,444,2.413,445,2.413,446,2.413,447,2.413,448,2.413,449,2.413]],["title/modules/UserModule.html",[38,1.025,54,1.938]],["body/modules/UserModule.html",[2,1.861,3,0.241,4,0.201,5,0.201,16,0.028,25,0.688,26,0.865,29,0.241,30,0.194,35,0.017,36,0.022,37,0.017,38,1.769,40,1.697,41,1.697,42,1.992,43,1.992,44,1.697,45,2.8,46,1.992,54,3.829,55,2.542,56,1.992,57,1.992,146,2.281,149,2.171,433,3.696,441,3.395,442,3.363,450,3.363,451,3.363,452,4.001,453,4.001]],["title/injectables/UserService.html",[66,1.025,441,1.768]],["body/injectables/UserService.html",[0,0.912,3,0.147,4,0.122,5,0.122,7,0.283,12,0.345,13,1.422,16,0.029,17,0.866,20,2.195,23,2.023,24,0.942,25,0.502,26,0.526,29,0.147,30,0.118,33,1.864,35,0.01,36,0.015,37,0.01,66,1.138,67,1.212,69,1.963,78,1.744,79,1.832,81,0.881,84,1.298,85,3.16,92,1.225,93,2.195,94,1.66,95,1.66,96,1.66,101,2.72,102,1.225,103,1.832,104,2.458,107,1.66,111,3.186,112,3.39,113,1.66,116,1.66,117,1.66,121,1.225,124,2.346,128,1.117,130,1.117,151,2.378,152,2.378,163,3.746,307,2.907,310,2.152,427,3.39,429,2.662,431,3.723,435,3.042,441,1.963,454,2.046,455,2.434,456,2.434,457,2.434,458,2.434,459,2.434,460,5.112,461,2.434,462,2.434,463,2.434]],["title/coverage.html",[464,3.279]],["body/coverage.html",[0,1.394,1,1.953,5,0.149,6,2.498,16,0.028,19,1.953,27,1.612,30,0.31,35,0.013,36,0.018,37,0.013,44,1.26,66,1.805,68,2.498,71,1.083,73,2.498,81,0.547,89,1.953,90,2.498,98,1.612,103,1.26,118,1.767,126,1.612,146,1.083,150,2.498,210,1.479,211,2.498,214,1.168,239,1.953,240,2.498,242,1.612,247,1.767,249,1.612,263,2.498,284,2.498,285,3.076,289,2.498,290,3.076,302,1.612,303,2.498,304,3.076,307,1.612,308,2.498,309,3.076,317,2.498,330,1.953,336,2.498,337,2.498,357,2.498,360,1.953,361,2.498,367,1.767,369,1.612,384,2.498,406,2.498,414,2.498,424,2.498,427,1.767,428,2.498,431,1.767,432,2.498,433,1.953,434,2.498,441,1.612,454,2.498,464,2.186,465,2.971,466,2.971,467,2.971,468,6.685,469,5.25,470,5.532,471,2.498,472,5.25,473,5.532,474,5.532,475,2.971,476,2.971,477,2.971,478,2.971]],["title/dependencies.html",[41,1.664,479,2.716]],["body/dependencies.html",[16,0.029,26,0.974,35,0.019,36,0.023,37,0.019,41,1.911,132,1.525,175,2.444,176,2.679,323,3.787,329,3.787,480,4.505,481,5.934,482,4.505,483,4.505,484,5.498,485,4.505,486,4.505,487,4.505,488,4.505,489,4.505,490,4.505,491,4.505,492,4.505,493,4.505,494,4.505,495,4.505,496,4.505]],["title/miscellaneous/functions.html",[497,2.284,498,3.297]],["body/miscellaneous/functions.html",[9,3.285,12,0.708,16,0.026,19,3.285,35,0.021,36,0.025,37,0.021,44,2.631,471,4.201,497,4.201,498,4.201,499,4.998,500,4.998]],["title/index.html",[12,0.385,501,2.716,502,2.716]],["body/index.html",[4,0.186,7,0.43,9,2.434,16,0.028,35,0.016,36,0.021,37,0.016,71,1.35,355,3.113,464,2.724,503,3.703,504,3.703,505,4.856,506,3.703,507,3.703,508,3.703,509,3.703,510,3.703,511,3.703,512,5.418,513,3.703,514,3.703,515,3.703,516,3.703,517,6.245,518,3.703,519,3.703,520,6.128,521,3.703,522,3.703,523,4.856,524,3.703,525,3.703,526,3.703,527,3.703,528,4.856,529,4.856,530,3.703,531,3.703,532,3.703,533,4.856,534,4.856,535,3.703,536,3.703,537,3.703,538,3.703,539,3.113,540,3.703,541,3.703,542,3.703,543,3.703,544,3.703,545,3.703,546,3.703,547,3.703,548,3.703,549,3.703,550,3.703,551,3.703,552,3.703,553,3.703,554,3.703,555,3.703,556,3.703]],["title/modules.html",[40,1.891]],["body/modules.html",[16,0.024,35,0.02,36,0.024,37,0.02,39,3.033,40,1.957,50,2.744,51,2.744,52,2.744,53,2.744,54,2.744,539,5.448,557,6.481,558,6.481,559,6.481]],["title/overview.html",[560,3.747]],["body/overview.html",[2,1.241,16,0.028,27,2.819,35,0.014,36,0.019,37,0.014,38,1.071,39,4.306,40,1.444,41,1.444,42,1.695,43,1.695,44,1.444,45,1.695,46,1.695,47,2.862,48,2.862,49,2.862,50,3.637,51,3.454,52,3.558,53,3.637,54,3.637,55,2.287,56,1.695,57,1.695,67,1.695,72,0.995,126,2.819,144,2.862,145,2.862,146,2.322,249,2.819,259,2.862,260,2.862,311,2.862,313,2.862,369,2.819,380,2.862,381,2.862,441,2.819,450,2.862,451,2.862,560,2.862,561,4.592,562,3.405,563,3.405]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0.1.13",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0cb885721191.json",{"_index":349,"title":{},"body":{"classes/GoogleData.html":{}}}],["1/1",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":563,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["4.1.6",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["4.7.12",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":562,"title":{},"body":{"overview.html":{}}}],["6",{"_index":561,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["7.5.1",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["9.4.2",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["9/9",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["_database",{"_index":319,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["accessors",{"_index":320,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["action",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["add(createauthordto",{"_index":182,"title":{},"body":{"injectables/AuthorService.html":{}}}],["add(createpublisherdto",{"_index":392,"title":{},"body":{"injectables/PublisherService.html":{}}}],["adds",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":329,"title":{},"body":{"injectables/DatabaseService.html":{},"dependencies.html":{}}}],["amazing",{"_index":540,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":238,"title":{},"body":{"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["apiproperty({description",{"_index":225,"title":{},"body":{"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["apitags",{"_index":131,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["apitags('authors",{"_index":133,"title":{},"body":{"controllers/AuthorController.html":{}}}],["apitags('books",{"_index":252,"title":{},"body":{"controllers/BookController.html":{}}}],["apitags('publishers",{"_index":372,"title":{},"body":{"controllers/PublisherController.html":{}}}],["apitags('users",{"_index":443,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":511,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":27,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":155,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["author",{"_index":71,"title":{"classes/Author.html":{}},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"index.html":{}}}],["author.controller",{"_index":148,"title":{},"body":{"modules/AuthorModule.html":{}}}],["author.data",{"_index":194,"title":{},"body":{"injectables/AuthorService.html":{}}}],["author.dto",{"_index":129,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts",{"_index":285,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["author.dto.ts:13",{"_index":287,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts:15",{"_index":407,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts:21",{"_index":288,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts:23",{"_index":408,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["author.exists",{"_index":198,"title":{},"body":{"injectables/AuthorService.html":{}}}],["author.id",{"_index":184,"title":{},"body":{"injectables/AuthorService.html":{}}}],["author.service",{"_index":127,"title":{},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{}}}],["author/entities/author.entity",{"_index":236,"title":{},"body":{"classes/Book.html":{}}}],["author_id",{"_index":291,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["authorcontroller",{"_index":89,"title":{"controllers/AuthorController.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"coverage.html":{}}}],["authordata",{"_index":193,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authordata.id",{"_index":195,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authorization",{"_index":352,"title":{},"body":{"classes/GoogleData.html":{}}}],["authormodule",{"_index":50,"title":{"modules/AuthorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules.html":{},"overview.html":{}}}],["authorref",{"_index":199,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authorref.update(updateauthordto",{"_index":202,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authors",{"_index":75,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["authors.push(authordata",{"_index":196,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authorservice",{"_index":126,"title":{"injectables/AuthorService.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":234,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["await",{"_index":180,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["backers",{"_index":541,"title":{},"body":{"index.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":210,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.controller",{"_index":262,"title":{},"body":{"modules/BookModule.html":{}}}],["book.data",{"_index":275,"title":{},"body":{"injectables/BookService.html":{}}}],["book.dto",{"_index":251,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":290,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:13",{"_index":301,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:15",{"_index":422,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:21",{"_index":296,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:23",{"_index":418,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:29",{"_index":295,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:31",{"_index":417,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:37",{"_index":300,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:39",{"_index":421,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:45",{"_index":299,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:47",{"_index":420,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:53",{"_index":294,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:55",{"_index":416,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:61",{"_index":298,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:63",{"_index":419,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.exists",{"_index":279,"title":{},"body":{"injectables/BookService.html":{}}}],["book.id",{"_index":271,"title":{},"body":{"injectables/BookService.html":{}}}],["book.service",{"_index":250,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["bookcontroller",{"_index":239,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookdata",{"_index":274,"title":{},"body":{"injectables/BookService.html":{}}}],["bookdata.id",{"_index":276,"title":{},"body":{"injectables/BookService.html":{}}}],["bookmodule",{"_index":51,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookref",{"_index":280,"title":{},"body":{"injectables/BookService.html":{}}}],["bookref.update(updatebookdto",{"_index":282,"title":{},"body":{"injectables/BookService.html":{}}}],["books",{"_index":212,"title":{},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["books.push(bookdata",{"_index":277,"title":{},"body":{"injectables/BookService.html":{}}}],["bookservice",{"_index":249,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"coverage.html":{},"overview.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":559,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":557,"title":{},"body":{"modules.html":{}}}],["building",{"_index":506,"title":{},"body":{"index.html":{}}}],["class",{"_index":30,"title":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":72,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cloud",{"_index":339,"title":{},"body":{"classes/GoogleData.html":{}}}],["cloud/firestore",{"_index":176,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authormodule",{"_index":144,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_authormodule_providers",{"_index":145,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":259,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":260,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":311,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":313,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":312,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["cluster_publishermodule",{"_index":380,"title":{},"body":{"modules/PublisherModule.html":{},"overview.html":{}}}],["cluster_publishermodule_providers",{"_index":381,"title":{},"body":{"modules/PublisherModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":450,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":451,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection('authors",{"_index":181,"title":{},"body":{"injectables/AuthorService.html":{}}}],["collection('publishers",{"_index":391,"title":{},"body":{"injectables/PublisherService.html":{}}}],["connect",{"_index":172,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"classes/GoogleData.html":{},"injectables/PublisherService.html":{}}}],["connecting",{"_index":318,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["connection",{"_index":160,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{}}}],["const",{"_index":179,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{}}}],["constructor(dbservice",{"_index":157,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["constructor(private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{}}}],["containing",{"_index":338,"title":{},"body":{"classes/GoogleData.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["controller('authors",{"_index":134,"title":{},"body":{"controllers/AuthorController.html":{}}}],["controller('books",{"_index":253,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('publishers",{"_index":373,"title":{},"body":{"controllers/PublisherController.html":{}}}],["controller('users",{"_index":444,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["copies",{"_index":221,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["copies_num",{"_index":213,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["coverage",{"_index":464,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":92,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":135,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["create(createauthordto",{"_index":97,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["create(createbookdto",{"_index":241,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createpublisherdto",{"_index":362,"title":{},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{}}}],["create(createuserdto",{"_index":435,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createauthordto",{"_index":98,"title":{"classes/CreateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["createbookdto",{"_index":242,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["created",{"_index":183,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["createpublisherdto",{"_index":302,"title":{"classes/CreatePublisherDto.html":{}},"body":{"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["creates",{"_index":322,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createuserdto",{"_index":307,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":102,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential",{"_index":333,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["data",{"_index":190,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["data.ts",{"_index":337,"title":{},"body":{"classes/GoogleData.html":{},"coverage.html":{}}}],["data.ts:13",{"_index":353,"title":{},"body":{"classes/GoogleData.html":{}}}],["data.ts:8",{"_index":350,"title":{},"body":{"classes/GoogleData.html":{}}}],["database",{"_index":154,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{}}}],["database.service",{"_index":316,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["database/database.service",{"_index":149,"title":{},"body":{"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"modules/UserModule.html":{}}}],["databasemodule",{"_index":52,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseservice",{"_index":146,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":227,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["dbservice",{"_index":161,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["dbservice.database",{"_index":178,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["dd",{"_index":232,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["declarations",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":344,"title":{},"body":{"classes/GoogleData.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":125,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":114,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["deleting",{"_index":116,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["development",{"_index":519,"title":{},"body":{"index.html":{}}}],["doc(id",{"_index":400,"title":{},"body":{"injectables/PublisherService.html":{}}}],["documentation",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":128,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":130,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":530,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":507,"title":{},"body":{"index.html":{}}}],["entity",{"_index":74,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/Publisher.html":{},"classes/User.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":412,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":93,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finding",{"_index":106,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["findone",{"_index":94,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":138,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":107,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firebase",{"_index":323,"title":{},"body":{"injectables/DatabaseService.html":{},"dependencies.html":{}}}],["firebase.credential.cert(googledata.keyjsonfirestore",{"_index":334,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["firebase.firestore",{"_index":335,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["firebase.initializeapp",{"_index":332,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["firebasefirestore.firestore",{"_index":328,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["firestore",{"_index":168,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"injectables/PublisherService.html":{}}}],["first",{"_index":83,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["first_name",{"_index":77,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["format",{"_index":229,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["found",{"_index":208,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["framework",{"_index":505,"title":{},"body":{"index.html":{}}}],["function",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":498,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gcloud",{"_index":354,"title":{},"body":{"classes/GoogleData.html":{}}}],["get(':id",{"_index":108,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["getdatabase",{"_index":325,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["gethello",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gets",{"_index":159,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["getter",{"_index":327,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getting",{"_index":501,"title":{"index.html":{}},"body":{}}],["given",{"_index":112,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["global",{"_index":315,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{}}}],["google",{"_index":175,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"injectables/PublisherService.html":{},"dependencies.html":{}}}],["googledata",{"_index":330,"title":{"classes/GoogleData.html":{}},"body":{"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"coverage.html":{}}}],["grow",{"_index":536,"title":{},"body":{"index.html":{}}}],["hello",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["here",{"_index":547,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":173,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["httpexception('no",{"_index":189,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["httpexception('not",{"_index":207,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["https://nestjs.com",{"_index":553,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":174,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["httpstatus.no_content",{"_index":191,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["httpstatus.not_found",{"_index":209,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["id",{"_index":79,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateBookDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":516,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":518,"title":{},"body":{"index.html":{}}}],["join",{"_index":543,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":550,"title":{},"body":{"index.html":{}}}],["keyjsonfirestore",{"_index":342,"title":{},"body":{"classes/GoogleData.html":{}}}],["last",{"_index":88,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["last_name",{"_index":80,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["legend",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["library",{"_index":347,"title":{},"body":{"classes/GoogleData.html":{}}}],["license",{"_index":556,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":534,"title":{},"body":{"index.html":{}}}],["main",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["matching",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":101,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":497,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":533,"title":{},"body":{"index.html":{}}}],["mm",{"_index":231,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["mobile",{"_index":348,"title":{},"body":{"classes/GoogleData.html":{}}}],["mode",{"_index":523,"title":{},"body":{"index.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":546,"title":{},"body":{"index.html":{}}}],["myĺ›liwiec",{"_index":551,"title":{},"body":{"index.html":{}}}],["name",{"_index":84,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":512,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":555,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":410,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["nestjs/platform",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":132,"title":{},"body":{"controllers/AuthorController.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":103,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":504,"title":{},"body":{"index.html":{}}}],["npm",{"_index":517,"title":{},"body":{"index.html":{}}}],["number",{"_index":85,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/Publisher.html":{},"classes/UpdateBookDto.html":{},"injectables/UserService.html":{}}}],["object",{"_index":169,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["open",{"_index":535,"title":{},"body":{"index.html":{}}}],["operations",{"_index":151,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["optional",{"_index":78,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":560,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":479,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":124,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["param('id",{"_index":377,"title":{},"body":{"controllers/PublisherController.html":{}}}],["parameter",{"_index":111,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":104,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":409,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createauthordto",{"_index":413,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["partialtype(createbookdto",{"_index":423,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createpublisherdto",{"_index":426,"title":{},"body":{"classes/UpdatePublisherDto.html":{}}}],["partialtype(createuserdto",{"_index":430,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passed",{"_index":152,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["path",{"_index":351,"title":{},"body":{"classes/GoogleData.html":{}}}],["please",{"_index":544,"title":{},"body":{"index.html":{}}}],["post",{"_index":99,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":153,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{}}}],["production",{"_index":525,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":503,"title":{},"body":{"index.html":{}}}],["project",{"_index":355,"title":{},"body":{"classes/GoogleData.html":{},"index.html":{}}}],["projectid",{"_index":343,"title":{},"body":{"classes/GoogleData.html":{}}}],["properties",{"_index":76,"title":{},"body":{"classes/Author.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":356,"title":{},"body":{"classes/GoogleData.html":{}}}],["publisher",{"_index":214,"title":{"classes/Publisher.html":{}},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["publisher.controller",{"_index":383,"title":{},"body":{"modules/PublisherModule.html":{}}}],["publisher.data",{"_index":397,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publisher.dto",{"_index":371,"title":{},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{}}}],["publisher.dto.ts",{"_index":304,"title":{},"body":{"classes/CreatePublisherDto.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["publisher.dto.ts:13",{"_index":306,"title":{},"body":{"classes/CreatePublisherDto.html":{}}}],["publisher.dto.ts:15",{"_index":425,"title":{},"body":{"classes/UpdatePublisherDto.html":{}}}],["publisher.exists",{"_index":401,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publisher.id",{"_index":393,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publisher.service",{"_index":370,"title":{},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{}}}],["publisher/entities/publisher.entity",{"_index":237,"title":{},"body":{"classes/Book.html":{}}}],["publisher_id",{"_index":292,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["publishercontroller",{"_index":360,"title":{"controllers/PublisherController.html":{}},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"coverage.html":{}}}],["publisherdata",{"_index":396,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publisherdata.id",{"_index":398,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publishermodule",{"_index":53,"title":{"modules/PublisherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PublisherModule.html":{},"modules.html":{},"overview.html":{}}}],["publisherref",{"_index":402,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publisherref.update(updatepublisherdto",{"_index":404,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publishers",{"_index":305,"title":{},"body":{"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{}}}],["publishers.push(publisherdata",{"_index":399,"title":{},"body":{"injectables/PublisherService.html":{}}}],["publisherservice",{"_index":369,"title":{"injectables/PublisherService.html":{}},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"coverage.html":{},"overview.html":{}}}],["put",{"_index":123,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":119,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["read",{"_index":545,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["reference",{"_index":170,"title":{},"body":{"injectables/AuthorService.html":{},"classes/Book.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{}}}],["referenced",{"_index":415,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["referencing",{"_index":293,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["referencjing",{"_index":297,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["reflect",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["release",{"_index":226,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["release_date",{"_index":215,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["remove",{"_index":95,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":142,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":113,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removed",{"_index":206,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["removes",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":515,"title":{},"body":{"index.html":{}}}],["res",{"_index":201,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["reset",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources/author/author.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/book/book.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/publisher/publisher.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/user/user.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["result",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":520,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":508,"title":{},"body":{"index.html":{}}}],["server",{"_index":509,"title":{},"body":{"index.html":{}}}],["service",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/DatabaseService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["services",{"_index":340,"title":{},"body":{"classes/GoogleData.html":{}}}],["side",{"_index":510,"title":{},"body":{"index.html":{}}}],["snapshot",{"_index":185,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["snapshot.empty",{"_index":187,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["snapshot.foreach((author",{"_index":192,"title":{},"body":{"injectables/AuthorService.html":{}}}],["snapshot.foreach((book",{"_index":273,"title":{},"body":{"injectables/BookService.html":{}}}],["snapshot.foreach((publisher",{"_index":395,"title":{},"body":{"injectables/PublisherService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["specified",{"_index":110,"title":{},"body":{"controllers/AuthorController.html":{}}}],["sponsors",{"_index":538,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/database/database.module.ts",{"_index":314,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.service.ts",{"_index":317,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/database/database.service.ts:15",{"_index":324,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/database/database.service.ts:20",{"_index":326,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/database/database.service.ts:22",{"_index":321,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/google",{"_index":336,"title":{},"body":{"classes/GoogleData.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/resources/author/author.controller.ts",{"_index":90,"title":{},"body":{"controllers/AuthorController.html":{},"coverage.html":{}}}],["src/resources/author/author.controller.ts:28",{"_index":100,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:36",{"_index":105,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:45",{"_index":109,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:55",{"_index":120,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:64",{"_index":115,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.module.ts",{"_index":147,"title":{},"body":{"modules/AuthorModule.html":{}}}],["src/resources/author/author.service.ts",{"_index":150,"title":{},"body":{"injectables/AuthorService.html":{},"coverage.html":{}}}],["src/resources/author/author.service.ts:16",{"_index":158,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:30",{"_index":162,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:41",{"_index":164,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:62",{"_index":165,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:75",{"_index":167,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:87",{"_index":166,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/dto/create",{"_index":284,"title":{},"body":{"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["src/resources/author/dto/update",{"_index":406,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["src/resources/author/entities/author.entity.ts",{"_index":73,"title":{},"body":{"classes/Author.html":{},"coverage.html":{}}}],["src/resources/author/entities/author.entity.ts:13",{"_index":82,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/author/entities/author.entity.ts:18",{"_index":87,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/author/entities/author.entity.ts:8",{"_index":86,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/book/book.controller.ts",{"_index":240,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/resources/book/book.controller.ts:28",{"_index":243,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:36",{"_index":244,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:45",{"_index":245,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:55",{"_index":248,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:64",{"_index":246,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.module.ts",{"_index":261,"title":{},"body":{"modules/BookModule.html":{}}}],["src/resources/book/book.service.ts",{"_index":263,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/resources/book/book.service.ts:16",{"_index":264,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:30",{"_index":265,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:39",{"_index":266,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:60",{"_index":267,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:73",{"_index":269,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:85",{"_index":268,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/dto/create",{"_index":289,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/resources/book/dto/update",{"_index":414,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/resources/book/entities/book.entity.ts",{"_index":211,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/resources/book/entities/book.entity.ts:12",{"_index":223,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:17",{"_index":235,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:22",{"_index":222,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:27",{"_index":219,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:32",{"_index":233,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:40",{"_index":228,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:45",{"_index":218,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:50",{"_index":224,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/publisher/dto/create",{"_index":303,"title":{},"body":{"classes/CreatePublisherDto.html":{},"coverage.html":{}}}],["src/resources/publisher/dto/update",{"_index":424,"title":{},"body":{"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts",{"_index":357,"title":{},"body":{"classes/Publisher.html":{},"coverage.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts:13",{"_index":359,"title":{},"body":{"classes/Publisher.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts:8",{"_index":358,"title":{},"body":{"classes/Publisher.html":{}}}],["src/resources/publisher/publisher.controller.ts",{"_index":361,"title":{},"body":{"controllers/PublisherController.html":{},"coverage.html":{}}}],["src/resources/publisher/publisher.controller.ts:28",{"_index":363,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:36",{"_index":364,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:45",{"_index":365,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:55",{"_index":368,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:67",{"_index":366,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.module.ts",{"_index":382,"title":{},"body":{"modules/PublisherModule.html":{}}}],["src/resources/publisher/publisher.service.ts",{"_index":384,"title":{},"body":{"injectables/PublisherService.html":{},"coverage.html":{}}}],["src/resources/publisher/publisher.service.ts:16",{"_index":385,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:30",{"_index":386,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:41",{"_index":387,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:62",{"_index":388,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:78",{"_index":390,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:90",{"_index":389,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/user/dto/create",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/resources/user/dto/update",{"_index":428,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/resources/user/entities/user.entity.ts",{"_index":432,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/resources/user/user.controller.ts",{"_index":434,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/resources/user/user.controller.ts:28",{"_index":436,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:36",{"_index":437,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:45",{"_index":438,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:55",{"_index":440,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:64",{"_index":439,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.module.ts",{"_index":452,"title":{},"body":{"modules/UserModule.html":{}}}],["src/resources/user/user.service.ts",{"_index":454,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/resources/user/user.service.ts:14",{"_index":455,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:21",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:29",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:38",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:46",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":521,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":524,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":526,"title":{},"body":{"index.html":{}}}],["started",{"_index":502,"title":{"index.html":{}},"body":{}}],["starter",{"_index":514,"title":{},"body":{"index.html":{}}}],["starting",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["statements",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":341,"title":{},"body":{"classes/GoogleData.html":{}}}],["stay",{"_index":548,"title":{},"body":{"index.html":{}}}],["stock_num",{"_index":216,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["string",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["success",{"_index":205,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["support",{"_index":539,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":558,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":529,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":532,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["tests",{"_index":528,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":537,"title":{},"body":{"index.html":{}}}],["this._database",{"_index":331,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.appservice.gethello",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authorservice.create(createauthordto",{"_index":136,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findall",{"_index":137,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findone(id",{"_index":139,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.remove(id",{"_index":143,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.update(id",{"_index":141,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.bookservice.create(createbookdto",{"_index":254,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":255,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(id",{"_index":256,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(id",{"_index":258,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(id",{"_index":257,"title":{},"body":{"controllers/BookController.html":{}}}],["this.database",{"_index":177,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["this.database.collection('authors').doc(id",{"_index":200,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.database.collection('authors').doc(id).delete",{"_index":204,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.database.collection('authors').doc(id).get",{"_index":197,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.database.collection('authors').get",{"_index":186,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.database.collection('books').add(createbookdto",{"_index":270,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').doc(id",{"_index":281,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').doc(id).delete",{"_index":283,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').doc(id).get",{"_index":278,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('books').get",{"_index":272,"title":{},"body":{"injectables/BookService.html":{}}}],["this.database.collection('publishers').doc(id",{"_index":403,"title":{},"body":{"injectables/PublisherService.html":{}}}],["this.database.collection('publishers').doc(id).delete",{"_index":405,"title":{},"body":{"injectables/PublisherService.html":{}}}],["this.database.collection('publishers').get",{"_index":394,"title":{},"body":{"injectables/PublisherService.html":{}}}],["this.publisherservice.create(createpublisherdto",{"_index":374,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.findall",{"_index":375,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.findone(id",{"_index":376,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.remove(id",{"_index":379,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.update(id",{"_index":378,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.userservice.create(createuserdto",{"_index":445,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":446,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(+id",{"_index":447,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(+id",{"_index":449,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":448,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":188,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["title",{"_index":217,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["total",{"_index":220,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["touch",{"_index":549,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":286,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["twitter",{"_index":554,"title":{},"body":{"index.html":{}}}],["type",{"_index":81,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"injectables/DatabaseService.html":{},"classes/GoogleData.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types",{"_index":411,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["typescript",{"_index":513,"title":{},"body":{"index.html":{}}}],["ui",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":527,"title":{},"body":{"index.html":{}}}],["update",{"_index":96,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":140,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":117,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateauthordto",{"_index":118,"title":{"classes/UpdateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["updatebookdto",{"_index":247,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updated",{"_index":203,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["updatepublisherdto",{"_index":367,"title":{"classes/UpdatePublisherDto.html":{}},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["updates",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":427,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":121,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["urz",{"_index":346,"title":{},"body":{"classes/GoogleData.html":{}}}],["used",{"_index":171,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{}}}],["user",{"_index":431,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":453,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":429,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.service",{"_index":442,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":433,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":54,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":441,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":163,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["value",{"_index":345,"title":{},"body":{"classes/GoogleData.html":{}}}],["watch",{"_index":522,"title":{},"body":{"index.html":{}}}],["website",{"_index":552,"title":{},"body":{"index.html":{}}}],["world",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["you'd",{"_index":542,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":230,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["zoom",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/DatabaseModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Main app controller for root route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n                    Function returning hello world\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n/**\n * Main app controller for root route\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Function returning hello world\n   */\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nPublisherModule\n\nPublisherModule\n\nAppModule -->\n\nPublisherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            PublisherModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BookModule } from './resources/book/book.module';\nimport { AuthorModule } from './resources/author/author.module';\nimport { PublisherModule } from './resources/publisher/publisher.module';\nimport { UserModule } from './resources/user/user.module';\nimport { DatabaseModule } from './database/database.module';\n\n@Module({\n  imports: [\n    BookModule,\n    AuthorModule,\n    PublisherModule,\n    UserModule,\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Main app service for app controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:11\n                \n            \n\n\n            \n                \n                    Function returning 'Hello world'\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Main app service for app controller\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Function returning 'Hello world'\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Author.html":{"url":"classes/Author.html","title":"class - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/entities/author.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:13\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:8\n                            \n                        \n\n                \n                    \n                        ID of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:18\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Author {\n  /**\n   * ID of author\n   */\n  id?: number;\n\n  /**\n   * First name of author\n   */\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthorController.html":{"url":"controllers/AuthorController.html","title":"controller - AuthorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/author.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                authors\n            \n\n            \n                Description\n            \n            \n                Controller for authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createAuthorDto: CreateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new author\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorDto\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method finding all authors\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method finding specified author by parameter given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting specified author by parameter given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating specified author by parameters given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for authors\n */\n@ApiTags('Authors')\n@Controller('authors')\nexport class AuthorController {\n  constructor(private readonly authorService: AuthorService) {}\n\n  /**\n   * Method creating new author\n   * @param createAuthorDto\n   */\n  @Post()\n  create(@Body() createAuthorDto: CreateAuthorDto) {\n    return this.authorService.create(createAuthorDto);\n  }\n\n  /**\n   * Method finding all authors\n   */\n  @Get()\n  findAll() {\n    return this.authorService.findAll();\n  }\n\n  /**\n   * Method finding specified author by parameter given\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.authorService.findOne(id);\n  }\n\n  /**\n   * Method updating specified author by parameters given\n   * @param id\n   * @param updateAuthorDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateAuthorDto: UpdateAuthorDto) {\n    return this.authorService.update(id, updateAuthorDto);\n  }\n\n  /**\n   * Method deleting specified author by parameter given\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.authorService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorModule.html":{"url":"modules/AuthorModule.html","title":"module - AuthorModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\n\nAuthorService\n\nAuthorService\n\n\n\nAuthorModule\n\nAuthorModule\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAuthorModule -->\n\nDatabaseService->AuthorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/author/author.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorService\n                        \n                        \n                            DatabaseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { AuthorController } from './author.controller';\nimport { DatabaseService } from '../../database/database.service';\n\n@Module({\n  controllers: [AuthorController],\n  providers: [AuthorService, DatabaseService],\n})\nexport class AuthorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorService.html":{"url":"injectables/AuthorService.html","title":"injectable - AuthorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/author.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for authors operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/resources/author/author.service.ts:16\n                            \n                        \n\n                \n                    \n                            Gets connection to database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAuthorDto: CreateAuthorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:30\n                \n            \n\n\n            \n                \n                    Method creating new author using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorDto\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:41\n                \n            \n\n\n            \n                \n                    Method finding all authors\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:62\n                \n            \n\n\n            \n                \n                    Method finding author by given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:87\n                \n            \n\n\n            \n                \n                    Method deleting author using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:75\n                \n            \n\n\n            \n                \n                    Method updating author using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Firestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/author.service.ts:16\n                            \n                        \n\n                \n                    \n                        Firestore object reference used to connect to database\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\nimport { Firestore } from '@google-cloud/firestore';\nimport { DatabaseService } from '../../database/database.service';\n\n/**\n * Service for authors operations passed to controller\n */\n@Injectable()\nexport class AuthorService {\n  /**\n   * Firestore object reference used to connect to database\n   * @private\n   */\n  private database: Firestore;\n\n  /**\n   * Gets connection to database\n   * @param dbService\n   */\n  constructor(private dbService: DatabaseService) {\n    this.database = dbService.database;\n  }\n\n  /**\n   * Method creating new author using given parameter\n   * @param createAuthorDto\n   */\n  async create(createAuthorDto: CreateAuthorDto) {\n    const author = await this.database\n      .collection('authors')\n      .add(createAuthorDto);\n\n    return { created: author.id };\n  }\n\n  /**\n   * Method finding all authors\n   */\n  async findAll() {\n    const authors = [];\n    const snapshot = await this.database.collection('authors').get();\n\n    if (snapshot.empty) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n\n    snapshot.forEach((author) => {\n      const authorData = author.data();\n      authorData.id = author.id;\n      authors.push(authorData);\n    });\n\n    return authors;\n  }\n\n  /**\n   * Method finding author by given parameter\n   * @param id\n   */\n  async findOne(id: string) {\n    const author = await this.database.collection('authors').doc(id).get();\n    if (!author.exists) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n    return author.data();\n  }\n\n  /**\n   * Method updating author using given parameters\n   * @param id\n   * @param updateAuthorDto\n   */\n  async update(id: string, updateAuthorDto: UpdateAuthorDto) {\n    const authorRef = this.database.collection('authors').doc(id);\n\n    const res = await authorRef.update(updateAuthorDto);\n\n    return { updated: res };\n  }\n\n  /**\n   * Method deleting author using given parameter\n   * @param id\n   */\n  async remove(id: string) {\n    const author = await this.database.collection('authors').doc(id).get();\n\n    if (author.exists) {\n      await this.database.collection('authors').doc(id).delete();\n      return { success: 'Removed' };\n    } else {\n      throw new HttpException('NOT FOUND', HttpStatus.NOT_FOUND);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/entities/book.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                copies_num\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                publisher\n                            \n                            \n                                release_date\n                            \n                            \n                                stock_num\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Author\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to Author of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copies_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:27\n                            \n                        \n\n                \n                    \n                        Total number of copies\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:22\n                            \n                        \n\n                \n                    \n                        Description of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:12\n                            \n                        \n\n                \n                    \n                        ID of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Publisher\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:50\n                            \n                        \n\n                \n                    \n                        Reference to Publisher of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            release_date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Release date of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:40\n                            \n                        \n\n                \n                    \n                        Release date of book in format yyyy-MM-DD\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:32\n                            \n                        \n\n                \n                    \n                        Number of available books\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:17\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Author } from '../../author/entities/author.entity';\nimport { Publisher } from '../../publisher/entities/publisher.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Entity Class for books\n */\nexport class Book {\n  /**\n   * ID of book\n   */\n  id?: number;\n\n  /**\n   * Title of book\n   */\n  title: string;\n\n  /**\n   * Description of book\n   */\n  description: string;\n\n  /**\n   * Total number of copies\n   */\n  copies_num: number;\n\n  /**\n   * Number of available books\n   */\n  stock_num: number;\n\n  /**\n   * Release date of book in format yyyy-MM-DD\n   */\n  @ApiProperty({\n    description: 'Release date of book',\n  })\n  release_date: string;\n\n  /**\n   * Reference to Author of book\n   */\n  author: Author;\n\n  /**\n   * Reference to Publisher of book\n   */\n  publisher: Publisher;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n            \n                Description\n            \n            \n                Controller for books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new book\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all books\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { BookService } from './book.service';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for books\n */\n@ApiTags('Books')\n@Controller('books')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  /**\n   * Method creating new book\n   * @param createBookDto\n   */\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto);\n  }\n\n  /**\n   * Method returning all books\n   */\n  @Get()\n  findAll() {\n    return this.bookService.findAll();\n  }\n\n  /**\n   * Method returning book by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.bookService.findOne(id);\n  }\n\n  /**\n   * Method updating book by ID\n   * @param id\n   * @param updateBookDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(id, updateBookDto);\n  }\n\n  /**\n   * Method deleting book by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.bookService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/book/book.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BookService } from './book.service';\nimport { BookController } from './book.controller';\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/book.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for book operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/resources/book/book.service.ts:16\n                            \n                        \n\n                \n                    \n                            Gets connection to database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createBookDto: CreateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:30\n                \n            \n\n\n            \n                \n                    Method creating new book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:39\n                \n            \n\n\n            \n                \n                    Method returning all books\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:60\n                \n            \n\n\n            \n                \n                    Method returning book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:85\n                \n            \n\n\n            \n                \n                    Method deleting book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:73\n                \n            \n\n\n            \n                \n                    Method updating book using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Firestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/book.service.ts:16\n                            \n                        \n\n                \n                    \n                        Firestore object reference used to connect to database\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\nimport { Firestore } from '@google-cloud/firestore';\nimport { DatabaseService } from '../../database/database.service';\n\n/**\n * Service for book operations passed to controller\n */\n@Injectable()\nexport class BookService {\n  /**\n   * Firestore object reference used to connect to database\n   * @private\n   */\n  private database: Firestore;\n\n  /**\n   * Gets connection to database\n   * @param dbService\n   */\n  constructor(private dbService: DatabaseService) {\n    this.database = dbService.database;\n  }\n\n  /**\n   * Method creating new book using given parameter\n   * @param createBookDto\n   */\n  async create(createBookDto: CreateBookDto) {\n    const book = await this.database.collection('books').add(createBookDto);\n\n    return { created: book.id };\n  }\n\n  /**\n   * Method returning all books\n   */\n  async findAll() {\n    const books = [];\n    const snapshot = await this.database.collection('books').get();\n\n    if (snapshot.empty) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n\n    snapshot.forEach((book) => {\n      const bookData = book.data();\n      bookData.id = book.id;\n      books.push(bookData);\n    });\n\n    return books;\n  }\n\n  /**\n   * Method returning book using given parameter\n   * @param id\n   */\n  async findOne(id: string) {\n    const book = await this.database.collection('books').doc(id).get();\n    if (!book.exists) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n    return book.data();\n  }\n\n  /**\n   * Method updating book using given parameters\n   * @param id\n   * @param updateBookDto\n   */\n  async update(id: string, updateBookDto: UpdateBookDto) {\n    const bookRef = this.database.collection('books').doc(id);\n\n    const res = await bookRef.update(updateBookDto);\n\n    return { updated: res };\n  }\n\n  /**\n   * Method deleting book using given parameter\n   * @param id\n   */\n  async remove(id: string) {\n    const book = await this.database.collection('books').doc(id).get();\n\n    if (book.exists) {\n      await this.database.collection('books').doc(id).delete();\n      return { success: 'Removed' };\n    } else {\n      throw new HttpException('NOT FOUND', HttpStatus.NOT_FOUND);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorDto.html":{"url":"classes/CreateAuthorDto.html","title":"class - CreateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/dto/create-author.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:13\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:21\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating authors\n */\nexport class CreateAuthorDto {\n  /**\n   * First name of author\n   */\n  @ApiProperty({\n    description: 'First name of author',\n  })\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  @ApiProperty({\n    description: 'Last name of author',\n  })\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/dto/create-book.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author_id\n                            \n                            \n                                copies_num\n                            \n                            \n                                description\n                            \n                            \n                                publisher_id\n                            \n                            \n                                release_date\n                            \n                            \n                                stock_num\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID referencing author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:53\n                            \n                        \n\n                \n                    \n                        ID referencing author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copies_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Total number of copies'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:29\n                            \n                        \n\n                \n                    \n                        Total number of copies\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Description of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:21\n                            \n                        \n\n                \n                    \n                        Description of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID referencjing publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:61\n                            \n                        \n\n                \n                    \n                        ID referencjing publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            release_date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Release date of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:45\n                            \n                        \n\n                \n                    \n                        Release date of book in format yyyy-MM-DD\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Number of available books'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:37\n                            \n                        \n\n                \n                    \n                        Number of available books\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:13\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating books\n */\nexport class CreateBookDto {\n  /**\n   * Title of book\n   */\n  @ApiProperty({\n    description: 'Title of book',\n  })\n  title: string;\n\n  /**\n   * Description of book\n   */\n  @ApiProperty({\n    description: 'Description of book',\n  })\n  description: string;\n\n  /**\n   * Total number of copies\n   */\n  @ApiProperty({\n    description: 'Total number of copies',\n  })\n  copies_num: number;\n\n  /**\n   * Number of available books\n   */\n  @ApiProperty({\n    description: 'Number of available books',\n  })\n  stock_num: number;\n\n  /**\n   * Release date of book in format yyyy-MM-DD\n   */\n  @ApiProperty({\n    description: 'Release date of book',\n  })\n  release_date: string;\n\n  /**\n   * ID referencing author\n   */\n  @ApiProperty({\n    description: 'ID referencing author',\n  })\n  author_id: string;\n\n  /**\n   * ID referencjing publisher\n   */\n  @ApiProperty({\n    description: 'ID referencjing publisher',\n  })\n  publisher_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePublisherDto.html":{"url":"classes/CreatePublisherDto.html","title":"class - CreatePublisherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePublisherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/dto/create-publisher.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/create-publisher.dto.ts:13\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating publishers\n */\nexport class CreatePublisherDto {\n  /**\n   * Name of publisher\n   */\n  @ApiProperty({\n    description: 'Name of publisher',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/dto/create-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDatabaseService \n\nDatabaseService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { DatabaseService } from './database.service';\n\n@Global()\n@Module({\n  providers: [DatabaseService],\n  exports: [DatabaseService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/database.service.ts\n        \n\n            \n                Description\n            \n            \n                Global service for connecting to database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _database\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    database\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/database/database.service.ts:22\n                            \n                        \n\n                \n                    \n                            Creates connection to firebase\n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Firestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/database.service.ts:15\n                            \n                        \n\n                \n                    \n                        Database reference\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        database\n                    \n                \n\n                \n                    \n                        getdatabase()\n                    \n                \n                            \n                                \n                                    Defined in src/database/database.service.ts:20\n                                \n                            \n                    \n                        \n                                Getter for database\n\n\n                                \n                                    Returns :     FirebaseFirestore.Firestore\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Firestore } from '@google-cloud/firestore';\nimport firebase from 'firebase-admin';\nimport { GoogleData } from '../google-data';\n\n/**\n * Global service for connecting to database\n */\n@Injectable()\nexport class DatabaseService {\n  /**\n   * Database reference\n   * @private\n   */\n  private _database: Firestore;\n\n  /**\n   * Getter for database\n   */\n  get database(): FirebaseFirestore.Firestore {\n    return this._database;\n  }\n\n  /**\n   * Creates connection to firebase\n   */\n  constructor() {\n    if (!firebase) {\n      firebase.initializeApp({\n        credential: firebase.credential.cert(GoogleData.keyJsonFirestore),\n      });\n\n      this._database = firebase.firestore();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleData.html":{"url":"classes/GoogleData.html","title":"class - GoogleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/google-data.ts\n        \n\n            \n                Description\n            \n            \n                Class containing data to connect to google cloud services\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                keyJsonFirestore\n                            \n                            \n                                    Static\n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            keyJsonFirestore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'urz-library-mobile-0cb885721191.json'\n                        \n                    \n                        \n                            \n                                    Defined in src/google-data.ts:8\n                            \n                        \n\n                \n                    \n                        Path to authorization data for Firestore\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'urz-library-mobile'\n                        \n                    \n                        \n                            \n                                    Defined in src/google-data.ts:13\n                            \n                        \n\n                \n                    \n                        Name of GCloud project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GoogleData {\n  /**\n   * Path to authorization data for Firestore\n   */\n  public static keyJsonFirestore = 'urz-library-mobile-0cb885721191.json';\n\n  /**\n   * Name of GCloud project\n   */\n  public static projectId = 'urz-library-mobile';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Publisher.html":{"url":"classes/Publisher.html","title":"class - Publisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Publisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/entities/publisher.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/entities/publisher.entity.ts:8\n                            \n                        \n\n                \n                    \n                        ID of publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/entities/publisher.entity.ts:13\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Publisher {\n  /**\n   * ID of publisher\n   */\n  id?: number;\n\n  /**\n   * Name of publisher\n   */\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PublisherController.html":{"url":"controllers/PublisherController.html","title":"controller - PublisherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PublisherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/publisher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                publishers\n            \n\n            \n                Description\n            \n            \n                Controller for publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPublisherDto: CreatePublisherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new publisher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublisherDto\n                                    \n                                                CreatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all publishers\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:67\n                \n            \n\n\n            \n                \n                    Method deleting publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePublisherDto: UpdatePublisherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublisherDto\n                                    \n                                                UpdatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PublisherService } from './publisher.service';\nimport { CreatePublisherDto } from './dto/create-publisher.dto';\nimport { UpdatePublisherDto } from './dto/update-publisher.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for publishers\n */\n@ApiTags('Publishers')\n@Controller('publishers')\nexport class PublisherController {\n  constructor(private readonly publisherService: PublisherService) {}\n\n  /**\n   * Method creating new publisher\n   * @param createPublisherDto\n   */\n  @Post()\n  create(@Body() createPublisherDto: CreatePublisherDto) {\n    return this.publisherService.create(createPublisherDto);\n  }\n\n  /**\n   * Method returning all publishers\n   */\n  @Get()\n  findAll() {\n    return this.publisherService.findAll();\n  }\n\n  /**\n   * Method returning publisher by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.publisherService.findOne(id);\n  }\n\n  /**\n   * Method updating publisher by ID\n   * @param id\n   * @param updatePublisherDto\n   */\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updatePublisherDto: UpdatePublisherDto,\n  ) {\n    return this.publisherService.update(id, updatePublisherDto);\n  }\n\n  /**\n   * Method deleting publisher by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.publisherService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublisherModule.html":{"url":"modules/PublisherModule.html","title":"module - PublisherModule","body":"\n                   \n\n\n\n\n    Modules\n    PublisherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublisherModule\n\n\n\ncluster_PublisherModule_providers\n\n\n\n\nDatabaseService\n\nDatabaseService\n\n\n\nPublisherModule\n\nPublisherModule\n\nPublisherModule -->\n\nDatabaseService->PublisherModule\n\n\n\n\n\nPublisherService\n\nPublisherService\n\nPublisherModule -->\n\nPublisherService->PublisherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/publisher/publisher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                        \n                            PublisherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PublisherController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PublisherService } from './publisher.service';\nimport { PublisherController } from './publisher.controller';\nimport { DatabaseService } from '../../database/database.service';\n\n@Module({\n  controllers: [PublisherController],\n  providers: [PublisherService, DatabaseService],\n})\nexport class PublisherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublisherService.html":{"url":"injectables/PublisherService.html","title":"injectable - PublisherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PublisherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/publisher.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for publisher operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/resources/publisher/publisher.service.ts:16\n                            \n                        \n\n                \n                    \n                            Gets connection to database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPublisherDto: CreatePublisherDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:30\n                \n            \n\n\n            \n                \n                    Method creating new publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublisherDto\n                                    \n                                                CreatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:41\n                \n            \n\n\n            \n                \n                    Method returning all publishers\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:62\n                \n            \n\n\n            \n                \n                    Method returning publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:90\n                \n            \n\n\n            \n                \n                    Method deleting publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePublisherDto: UpdatePublisherDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:78\n                \n            \n\n\n            \n                \n                    Method updating publisher using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublisherDto\n                                    \n                                                UpdatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Firestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/publisher.service.ts:16\n                            \n                        \n\n                \n                    \n                        Firestore object reference used to connect to database\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreatePublisherDto } from './dto/create-publisher.dto';\nimport { UpdatePublisherDto } from './dto/update-publisher.dto';\nimport { Firestore } from '@google-cloud/firestore';\nimport { DatabaseService } from '../../database/database.service';\n\n/**\n * Service for publisher operations passed to controller\n */\n@Injectable()\nexport class PublisherService {\n  /**\n   * Firestore object reference used to connect to database\n   * @private\n   */\n  private database: Firestore;\n\n  /**\n   * Gets connection to database\n   * @param dbService\n   */\n  constructor(private dbService: DatabaseService) {\n    this.database = dbService.database;\n  }\n\n  /**\n   * Method creating new publisher using given parameter\n   * @param createPublisherDto\n   */\n  async create(createPublisherDto: CreatePublisherDto) {\n    const publisher = await this.database\n      .collection('publishers')\n      .add(createPublisherDto);\n\n    return { created: publisher.id };\n  }\n\n  /**\n   * Method returning all publishers\n   */\n  async findAll() {\n    const publishers = [];\n    const snapshot = await this.database.collection('publishers').get();\n\n    if (snapshot.empty) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n\n    snapshot.forEach((publisher) => {\n      const publisherData = publisher.data();\n      publisherData.id = publisher.id;\n      publishers.push(publisherData);\n    });\n\n    return publishers;\n  }\n\n  /**\n   * Method returning publisher using given parameter\n   * @param id\n   */\n  async findOne(id: string) {\n    const publisher = await this.database\n      .collection('publishers')\n      .doc(id)\n      .get();\n    if (!publisher.exists) {\n      throw new HttpException('No Data', HttpStatus.NO_CONTENT);\n    }\n    return publisher.data();\n  }\n\n  /**\n   * Method updating publisher using given parameters\n   * @param id\n   * @param updatePublisherDto\n   */\n  async update(id: string, updatePublisherDto: UpdatePublisherDto) {\n    const publisherRef = this.database.collection('publishers').doc(id);\n\n    const res = await publisherRef.update(updatePublisherDto);\n\n    return { updated: res };\n  }\n\n  /**\n   * Method deleting publisher using given parameter\n   * @param id\n   */\n  async remove(id: string) {\n    const publisher = await this.database\n      .collection('publishers')\n      .doc(id)\n      .get();\n\n    if (publisher.exists) {\n      await this.database.collection('publishers').doc(id).delete();\n      return { success: 'Removed' };\n    } else {\n      throw new HttpException('NOT FOUND', HttpStatus.NOT_FOUND);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthorDto.html":{"url":"classes/UpdateAuthorDto.html","title":"class - UpdateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/dto/update-author.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/update-author.dto.ts:15\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/update-author.dto.ts:23\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthorDto } from './create-author.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating authors\n */\nexport class UpdateAuthorDto extends PartialType(CreateAuthorDto) {\n  /**\n   * First name of author\n   */\n  @ApiProperty({\n    description: 'First name of author',\n  })\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  @ApiProperty({\n    description: 'Last name of author',\n  })\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/dto/update-book.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author_id\n                            \n                            \n                                copies_num\n                            \n                            \n                                description\n                            \n                            \n                                publisher_id\n                            \n                            \n                                release_date\n                            \n                            \n                                stock_num\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Author referenced by ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:55\n                            \n                        \n\n                \n                    \n                        Author referenced by ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copies_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Total number of copies'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:31\n                            \n                        \n\n                \n                    \n                        Total number of copies\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Description of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:23\n                            \n                        \n\n                \n                    \n                        Description of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Publisher referenced by ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:63\n                            \n                        \n\n                \n                    \n                        Publisher referenced by ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            release_date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Release date of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:47\n                            \n                        \n\n                \n                    \n                        Release date of book in format yyyy-MM-DD\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Number of available books'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:39\n                            \n                        \n\n                \n                    \n                        Number of available books\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:15\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBookDto } from './create-book.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating books\n */\nexport class UpdateBookDto extends PartialType(CreateBookDto) {\n  /**\n   * Title of book\n   */\n  @ApiProperty({\n    description: 'Title of book',\n  })\n  title: string;\n\n  /**\n   * Description of book\n   */\n  @ApiProperty({\n    description: 'Description of book',\n  })\n  description: string;\n\n  /**\n   * Total number of copies\n   */\n  @ApiProperty({\n    description: 'Total number of copies',\n  })\n  copies_num: number;\n\n  /**\n   * Number of available books\n   */\n  @ApiProperty({\n    description: 'Number of available books',\n  })\n  stock_num: number;\n\n  /**\n   * Release date of book in format yyyy-MM-DD\n   */\n  @ApiProperty({\n    description: 'Release date of book',\n  })\n  release_date: string;\n\n  /**\n   * Author referenced by ID\n   */\n  @ApiProperty({\n    description: 'Author referenced by ID',\n  })\n  author_id: string;\n\n  /**\n   * Publisher referenced by ID\n   */\n  @ApiProperty({\n    description: 'Publisher referenced by ID',\n  })\n  publisher_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePublisherDto.html":{"url":"classes/UpdatePublisherDto.html","title":"class - UpdatePublisherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePublisherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/dto/update-publisher.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/update-publisher.dto.ts:15\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePublisherDto } from './create-publisher.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating publishers\n */\nexport class UpdatePublisherDto extends PartialType(CreatePublisherDto) {\n  /**\n   * Name of publisher\n   */\n  @ApiProperty({\n    description: 'Name of publisher',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/dto/update-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\n/**\n * Data Transfer Object for updating users\n */\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/entities/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n            \n                Description\n            \n            \n                Controller for users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all users\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for users\n */\n@ApiTags('Users')\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n   * Method creating new user\n   * @param createUserDto\n   */\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  /**\n   * Method returning all users\n   */\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  /**\n   * Method returning user by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  /**\n   * Method updating user by ID\n   * @param id\n   * @param updateUserDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  /**\n   * Method deleting user by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseService\n\nDatabaseService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { DatabaseService } from '../../database/database.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService, DatabaseService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for user operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:21\n                \n            \n\n\n            \n                \n                    Method returning all users\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Method returning user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating user using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n/**\n * Service for user operations passed to controller\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Method creating new user using given parameter\n   * @param createUserDto\n   */\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  /**\n   * Method returning all users\n   */\n  findAll() {\n    return `This action returns all user`;\n  }\n\n  /**\n   * Method returning user using given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  /**\n   * Method updating user using given parameters\n   * @param id\n   * @param updateUserDto\n   */\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  /**\n   * Method deleting user using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/database/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/google-data.ts\n            \n            class\n            GoogleData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/author/author.controller.ts\n            \n            controller\n            AuthorController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/author/author.service.ts\n            \n            injectable\n            AuthorService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/resources/author/dto/create-author.dto.ts\n            \n            class\n            CreateAuthorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/author/dto/update-author.dto.ts\n            \n            class\n            UpdateAuthorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/author/entities/author.entity.ts\n            \n            class\n            Author\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/resources/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/resources/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/resources/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/resources/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/resources/publisher/dto/create-publisher.dto.ts\n            \n            class\n            CreatePublisherDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/resources/publisher/dto/update-publisher.dto.ts\n            \n            class\n            UpdatePublisherDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/resources/publisher/entities/publisher.entity.ts\n            \n            class\n            Publisher\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/publisher/publisher.controller.ts\n            \n            controller\n            PublisherController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/publisher/publisher.service.ts\n            \n            injectable\n            PublisherService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/resources/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @google-cloud/firestore : ^4.8.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.12\n        \n            firebase-admin : ^9.4.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    *\nFunction starting app\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil MyĹ›liwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublisherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_PublisherModule\n\n\n\ncluster_PublisherModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseService \n\nDatabaseService \n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nPublisherModule\n\nPublisherModule\n\nAppModule -->\n\nPublisherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAuthorModule -->\n\nDatabaseService->AuthorModule\n\n\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\nPublisherModule -->\n\nDatabaseService->PublisherModule\n\n\n\nUserModule -->\n\nDatabaseService->UserModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\nPublisherService\n\nPublisherService\n\nPublisherModule -->\n\nPublisherService->PublisherModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
