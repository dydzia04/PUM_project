var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.736,1,2.059]],["body/controllers/AppController.html",[0,1.306,1,3.099,2,1.275,3,0.25,4,0.25,5,0.207,6,3.069,7,0.485,8,4,9,3.485,10,4.783,11,4.783,12,0.539,13,1.801,14,4.716,15,1.275,16,0.031,17,0.654,18,3.67,19,3.099,20,2.125,21,4,22,4,23,1.382,24,0.852,25,0.566,26,0.85,27,2.821,28,3.069,29,0.25,30,0.175,31,2.142,32,2.142,33,1.382,34,3.67,35,0.017,36,0.023,37,0.017]],["title/modules/AppModule.html",[38,1.104,39,2.059]],["body/modules/AppModule.html",[1,3.203,2,1.506,3,0.215,4,0.215,5,0.179,16,0.031,25,0.696,26,0.734,27,3.047,28,2.649,29,0.215,30,0.151,35,0.015,36,0.021,37,0.015,38,1.717,39,4.107,40,1.407,41,1.407,42,1.679,43,1.679,44,1.407,45,2.62,46,1.679,47,2.649,48,2.649,49,2.649,50,3.355,51,3.355,52,3.355,53,3.355,54,2.298,55,1.679,56,1.679,57,3.168,58,4.335,59,3.168,60,3.168,61,3.168,62,3.168,63,3.168]],["title/injectables/AppService.html",[27,1.685,64,1.104]],["body/injectables/AppService.html",[0,1.14,3,0.261,4,0.261,5,0.217,7,0.508,8,4.117,9,4.178,12,0.563,13,1.853,14,4.796,16,0.031,17,0.684,19,3.19,20,2.187,21,4.546,22,4.546,23,1.445,24,0.877,25,0.454,26,0.889,27,2.61,29,0.261,30,0.183,33,1.445,35,0.018,36,0.023,37,0.018,64,1.71,65,2.034,66,3.209,67,2.873,68,3.837]],["title/classes/Author.html",[30,0.152,69,1.196]],["body/classes/Author.html",[3,0.249,4,0.249,5,0.207,7,0.484,12,0.537,16,0.031,17,0.946,24,1.003,29,0.249,30,0.228,35,0.017,36,0.023,37,0.017,69,2.329,70,1.082,71,3.057,72,2.369,73,2.134,74,1.949,75,3.869,76,1.657,77,1.47,78,3.869,79,1.036,80,3.655,81,3.476,82,1.537,83,1.657,84,3.655,85,3.655,86,3.476]],["title/controllers/AuthorController.html",[0,0.736,87,2.059]],["body/controllers/AuthorController.html",[0,0.894,2,0.714,3,0.14,4,0.14,5,0.116,7,0.272,12,0.302,13,1.192,15,1.625,16,0.031,17,0.833,23,1.761,24,0.971,25,0.554,26,0.476,29,0.14,30,0.098,31,1.2,32,1.2,33,1.761,35,0.01,36,0.015,37,0.01,69,2,73,2.73,76,1.505,77,1.372,79,0.845,82,1.183,87,2.051,88,1.72,89,1.333,90,1.015,91,1.925,92,1.406,93,1.406,94,1.406,95,1.72,96,2.728,97,2.5,98,2.056,99,2.472,100,1.015,101,1.293,102,2.194,103,2.056,104,3.623,105,0.913,106,2.051,107,2.056,108,4.94,109,2.529,110,2.884,111,0.913,112,2.051,113,2.056,114,1.406,115,0.913,116,3.181,117,2.051,118,2.056,119,1.015,120,2.051,121,1.333,122,2.194,123,1.333,124,2.045,125,1.72,126,0.913,127,2.306,128,0.913,129,1.333,130,0.714,131,2.056,132,2.056,133,1.333,134,2.056,135,2.056,136,1.333,137,2.056,138,1.498,139,2.056,140,1.333,141,2.056]],["title/modules/AuthorModule.html",[38,1.104,50,1.855]],["body/modules/AuthorModule.html",[2,1.728,3,0.265,4,0.265,5,0.221,16,0.03,25,0.648,26,0.904,29,0.265,30,0.186,35,0.019,36,0.024,37,0.019,38,1.903,40,1.733,41,1.733,42,2.069,43,2.069,44,1.733,45,2.905,46,2.069,50,3.557,54,2.638,55,2.069,56,2.069,87,3.55,124,3.231,125,3.263,142,3.263,143,3.263,144,3.902,145,3.902]],["title/injectables/AuthorService.html",[64,1.104,124,1.685]],["body/injectables/AuthorService.html",[0,0.756,3,0.146,4,0.146,5,0.121,7,0.283,12,0.315,13,1.229,16,0.031,17,0.849,23,1.966,24,0.849,25,0.468,26,0.496,29,0.146,30,0.102,33,1.794,35,0.01,36,0.016,37,0.01,64,1.134,65,1.136,67,1.906,69,2.21,73,2.583,76,1.537,77,1.388,79,0.863,82,1.209,83,1.915,90,1.047,91,1.966,92,1.45,93,1.45,94,1.45,95,2.731,96,2.662,99,2.499,100,1.047,101,1.617,102,2.23,104,3.701,105,1.45,109,2.93,110,3.142,111,1.45,114,1.45,115,1.45,116,3.142,119,1.047,122,2.116,124,1.731,126,0.951,127,2.379,128,0.951,146,1.791,147,2.116,148,2.116,149,2.142,150,3.253,151,2.142,152,2.142,153,2.142,154,2.142,155,3.087,156,1.388,157,1.388,158,1.388]],["title/classes/Book.html",[30,0.152,159,1.539]],["body/classes/Book.html",[3,0.221,4,0.221,5,0.184,7,0.429,12,0.477,16,0.031,17,0.956,24,0.785,25,0.522,29,0.221,30,0.239,35,0.015,36,0.021,37,0.015,69,2.269,70,0.961,72,2.856,74,1.801,76,1.531,77,1.413,79,1.047,83,1.531,159,2.991,160,2.714,161,2.573,162,2.269,163,4.09,164,3.246,165,5.369,166,3.246,167,3.246,168,3.246,169,3.246,170,3.246]],["title/controllers/BookController.html",[0,0.736,171,2.059]],["body/controllers/BookController.html",[0,0.909,2,0.734,3,0.144,4,0.144,5,0.119,7,0.279,12,0.31,13,1.216,15,1.645,16,0.031,17,0.844,20,1.952,23,1.783,24,0.978,25,0.56,26,0.489,29,0.144,30,0.101,31,1.233,32,1.233,33,1.783,35,0.01,36,0.015,37,0.01,76,1.526,77,1.503,79,0.857,82,1.2,89,1.369,90,1.036,91,1.952,92,1.435,93,1.435,94,1.435,97,2.542,99,2.49,100,1.036,101,1.32,102,1.952,105,0.938,106,2.094,111,0.938,112,2.094,114,1.435,115,0.938,117,2.094,119,1.036,120,2.094,121,1.369,122,2.218,123,1.369,126,0.938,128,0.938,129,1.369,130,0.734,133,1.369,136,1.369,138,1.539,140,1.369,159,2.595,161,2.764,171,2.094,172,1.767,173,1.767,174,2.755,175,2.113,176,2.113,177,2.113,178,2.113,179,3.206,180,2.113,181,2.08,182,1.767,183,2.354,184,2.113,185,2.113,186,2.113,187,2.113,188,2.113,189,2.113,190,2.113]],["title/modules/BookModule.html",[38,1.104,51,1.855]],["body/modules/BookModule.html",[2,1.728,3,0.265,4,0.265,5,0.221,16,0.03,25,0.648,26,0.904,29,0.265,30,0.186,35,0.019,36,0.024,37,0.019,38,1.903,40,1.733,41,1.733,42,2.069,43,2.069,44,1.733,45,2.905,46,2.069,51,3.557,54,2.638,55,2.069,56,2.069,171,3.55,181,3.231,182,3.263,191,3.263,192,3.263,193,3.902,194,3.902]],["title/injectables/BookService.html",[64,1.104,181,1.685]],["body/injectables/BookService.html",[0,0.754,3,0.145,4,0.145,5,0.121,7,0.282,12,0.313,13,1.225,16,0.031,17,0.847,20,1.961,23,1.963,24,0.847,25,0.467,26,0.494,29,0.145,30,0.102,33,1.79,35,0.01,36,0.015,37,0.01,64,1.13,65,1.13,67,1.899,76,1.534,77,1.386,79,0.861,82,1.206,83,1.913,90,1.043,91,1.961,92,1.445,93,1.445,94,1.445,99,2.496,100,1.043,101,1.612,102,2.226,105,1.445,109,2.925,110,3.137,111,1.445,114,1.445,115,1.445,119,1.043,122,2.112,126,0.947,128,0.947,147,2.108,148,2.108,150,3.483,155,3.081,156,1.382,157,1.382,158,1.382,159,2.896,161,1.899,173,2.721,174,2.657,179,3.137,181,1.725,183,2.37,195,1.783,196,2.132,197,2.132,198,2.132,199,2.132,200,2.132]],["title/classes/CreateAuthorDto.html",[30,0.152,96,1.685]],["body/classes/CreateAuthorDto.html",[3,0.207,4,0.207,5,0.172,7,0.691,12,0.447,15,1.681,16,0.031,17,0.862,24,0.931,25,0.36,29,0.207,30,0.145,35,0.014,36,0.02,37,0.014,69,2.34,70,0.901,73,2.461,74,1.723,75,3.525,77,1.465,78,3.525,79,0.944,81,3.806,82,1.62,83,1.465,86,3.806,96,2.236,100,1.352,130,1.057,201,4.37,202,2.217,203,1.873,204,1.873,205,1.873,206,2.566,207,3.043,208,3.043,209,3.043,210,2.77]],["title/classes/CreateBookDto.html",[30,0.152,174,1.685]],["body/classes/CreateBookDto.html",[3,0.19,4,0.19,5,0.158,7,0.703,12,0.41,15,1.748,16,0.031,17,0.897,24,0.708,25,0.331,29,0.19,30,0.133,35,0.013,36,0.019,37,0.013,69,1.895,70,0.827,74,1.623,77,1.575,79,0.981,83,1.919,100,1.274,130,0.971,159,2.813,161,2.319,162,1.895,163,4.14,174,2.106,203,1.765,204,1.765,205,1.765,206,2.668,210,2.819,211,4.447,212,2.036,213,3.865,214,3.865,215,5.033,216,2.795,217,2.795,218,5.033,219,2.795,220,2.795]],["title/classes/CreatePublisherDto.html",[30,0.152,221,1.685]],["body/classes/CreatePublisherDto.html",[3,0.234,4,0.234,5,0.194,7,0.682,12,0.505,15,1.592,16,0.031,17,0.816,24,0.816,25,0.407,29,0.234,30,0.164,35,0.016,36,0.022,37,0.016,70,1.018,74,1.872,77,1.513,79,0.894,82,1.641,83,1.592,100,1.469,130,1.194,162,2.299,203,2.035,204,2.035,205,2.035,206,2.429,210,2.732,221,2.429,222,4.31,223,2.505,224,2.674,225,3.438,226,3.438]],["title/classes/CreateUserDto.html",[30,0.152,227,1.685]],["body/classes/CreateUserDto.html",[3,0.317,4,0.317,5,0.264,7,0.618,16,0.028,29,0.317,30,0.223,35,0.022,36,0.026,37,0.022,70,1.382,100,1.497,203,2.074,204,2.074,205,2.074,227,2.947,228,3.905,229,3.401,230,2.725]],["title/classes/Publisher.html",[30,0.152,162,1.196]],["body/classes/Publisher.html",[3,0.27,4,0.27,5,0.224,7,0.525,12,0.583,16,0.031,17,0.896,24,0.896,29,0.27,30,0.24,35,0.019,36,0.024,37,0.019,70,1.175,72,2.572,74,2.055,76,1.747,77,1.508,79,0.981,82,1.636,83,1.747,162,2.305,224,2.316,231,3.319,232,3.969,233,3.969]],["title/controllers/PublisherController.html",[0,0.736,234,2.059]],["body/controllers/PublisherController.html",[0,0.906,2,0.73,3,0.143,4,0.143,5,0.119,7,0.278,12,0.309,13,1.212,15,1.641,16,0.031,17,0.842,20,1.947,23,1.779,24,0.977,25,0.559,26,0.487,29,0.143,30,0.1,31,1.228,32,1.228,33,1.779,35,0.01,36,0.015,37,0.01,76,1.523,77,1.501,79,0.855,82,1.197,89,1.363,90,1.032,91,1.947,92,1.43,93,1.43,94,1.738,97,2.535,99,2.487,100,1.032,101,1.316,102,1.947,105,0.934,106,2.086,111,0.934,112,2.086,114,1.43,115,0.934,117,2.086,119,1.032,120,2.086,121,1.363,122,2.214,123,1.363,126,0.934,128,0.934,129,1.363,130,0.73,133,1.363,136,1.363,140,1.363,162,2.015,221,2.75,224,2.758,234,2.086,235,1.759,236,1.759,237,2.103,238,2.103,239,2.103,240,2.103,241,3.202,242,2.103,243,2.074,244,1.759,245,2.346,246,2.103,247,2.103,248,2.103,249,2.103,250,2.103,251,2.103,252,2.103,253,2.103]],["title/modules/PublisherModule.html",[38,1.104,52,1.855]],["body/modules/PublisherModule.html",[2,1.728,3,0.265,4,0.265,5,0.221,16,0.03,25,0.648,26,0.904,29,0.265,30,0.186,35,0.019,36,0.024,37,0.019,38,1.903,40,1.733,41,1.733,42,2.069,43,2.069,44,1.733,45,2.905,46,2.069,52,3.557,54,2.638,55,2.069,56,2.069,234,3.55,243,3.231,244,3.263,254,3.263,255,3.263,256,3.902,257,3.902]],["title/injectables/PublisherService.html",[64,1.104,243,1.685]],["body/injectables/PublisherService.html",[0,0.754,3,0.145,4,0.145,5,0.121,7,0.282,12,0.313,13,1.225,16,0.031,17,0.847,20,1.961,23,1.963,24,0.847,25,0.467,26,0.494,29,0.145,30,0.102,33,1.79,35,0.01,36,0.015,37,0.01,64,1.13,65,1.13,67,1.899,76,1.534,77,1.386,79,0.861,82,1.206,83,1.913,90,1.043,91,1.961,92,1.445,93,1.445,94,1.445,99,2.496,100,1.043,101,1.612,102,2.226,105,1.445,109,2.925,110,3.137,111,1.445,114,1.445,115,1.445,119,1.043,122,2.112,126,0.947,128,0.947,147,2.108,148,2.108,150,3.483,155,3.081,156,1.382,157,1.382,158,1.382,162,2.252,221,2.657,224,1.899,236,2.721,241,3.137,243,1.725,245,2.37,258,1.783,259,2.132,260,2.132,261,2.132,262,2.132,263,2.132]],["title/classes/UpdateAuthorDto.html",[30,0.152,116,1.855]],["body/classes/UpdateAuthorDto.html",[3,0.216,4,0.216,5,0.18,7,0.655,12,0.467,15,1.509,16,0.031,17,0.774,24,0.948,25,0.586,29,0.216,30,0.152,35,0.015,36,0.021,37,0.015,69,2.258,70,0.941,73,2.536,74,1.775,75,3.607,78,3.607,79,0.847,81,3.877,82,1.637,86,3.877,90,1.019,96,1.685,116,2.536,119,1.393,127,2.316,130,1.104,202,2.316,203,1.93,204,1.93,205,1.93,206,2.304,210,2.625,264,4.141,265,3.179,266,3.179,267,2.06,268,2.06,269,2.06,270,2.06,271,3.179]],["title/classes/UpdateBookDto.html",[30,0.152,179,1.855]],["body/classes/UpdateBookDto.html",[3,0.198,4,0.198,5,0.164,7,0.678,12,0.427,15,1.641,16,0.031,17,0.842,24,0.728,25,0.559,29,0.198,30,0.139,35,0.014,36,0.019,37,0.014,69,1.929,70,0.861,74,1.67,77,1.477,79,0.921,83,1.78,90,0.933,119,1.31,130,1.01,159,2.481,161,2.385,162,1.929,163,4.188,174,1.542,179,2.385,183,2.119,203,1.815,204,1.815,205,1.815,206,2.505,210,2.716,212,2.119,213,3.951,214,3.951,267,1.885,268,1.885,269,1.885,270,1.885,272,4.285,273,5.868,274,2.909,275,2.909,276,2.909,277,2.909]],["title/classes/UpdatePublisherDto.html",[30,0.152,241,1.855]],["body/classes/UpdatePublisherDto.html",[3,0.246,4,0.246,5,0.204,7,0.626,12,0.531,15,1.255,16,0.031,17,0.644,24,0.843,25,0.625,29,0.246,30,0.172,35,0.017,36,0.022,37,0.017,70,1.069,74,1.934,79,0.704,82,1.661,90,1.158,119,1.518,130,1.255,162,2.11,203,2.103,204,2.103,205,2.103,206,1.915,210,2.51,221,1.915,223,2.632,224,2.763,241,2.763,245,2.632,267,2.341,268,2.341,269,2.341,270,2.341,278,3.959,279,3.613,280,3.613]],["title/classes/UpdateUserDto.html",[30,0.152,281,1.855]],["body/classes/UpdateUserDto.html",[3,0.286,4,0.286,5,0.238,7,0.556,16,0.031,25,0.617,29,0.286,30,0.2,35,0.02,36,0.025,37,0.02,70,1.244,90,1.348,119,1.672,203,2.316,204,2.316,205,2.316,227,2.228,229,3.062,230,3.043,267,2.723,268,2.723,269,2.723,270,2.723,281,3.043,282,3.515,283,3.062,284,4.203]],["title/classes/User.html",[30,0.152,285,1.855]],["body/classes/User.html",[3,0.322,4,0.322,5,0.268,7,0.627,16,0.028,29,0.322,30,0.268,35,0.023,36,0.027,37,0.023,70,1.403,72,3.072,230,2.767,285,3.274,286,3.965]],["title/controllers/UserController.html",[0,0.736,287,2.059]],["body/controllers/UserController.html",[0,0.909,2,0.734,3,0.144,4,0.144,5,0.119,7,0.279,12,0.31,13,1.216,15,1.645,16,0.031,17,0.844,20,1.952,23,1.783,24,0.978,25,0.56,26,0.489,29,0.144,30,0.101,31,1.233,32,1.233,33,1.783,35,0.01,36,0.015,37,0.01,76,1.526,77,1.503,79,0.857,82,1.2,89,1.369,90,1.036,91,1.952,92,1.435,93,1.435,94,1.435,97,2.542,99,2.49,100,1.036,101,1.32,102,1.952,105,0.938,106,2.094,111,0.938,112,2.094,114,1.435,115,0.938,117,2.094,119,1.036,120,2.094,121,1.369,122,2.218,123,1.369,126,0.938,128,0.938,129,1.369,130,0.734,133,1.369,136,1.369,138,1.539,140,1.369,227,2.755,230,2.764,281,3.206,283,2.354,285,3.128,287,2.094,288,1.767,289,1.767,290,2.113,291,2.113,292,2.113,293,2.113,294,2.113,295,2.08,296,1.767,297,2.113,298,2.113,299,2.113,300,2.113,301,2.113,302,2.113,303,2.113]],["title/modules/UserModule.html",[38,1.104,53,1.855]],["body/modules/UserModule.html",[2,1.728,3,0.265,4,0.265,5,0.221,16,0.03,25,0.648,26,0.904,29,0.265,30,0.186,35,0.019,36,0.024,37,0.019,38,1.903,40,1.733,41,1.733,42,2.069,43,2.069,44,1.733,45,2.905,46,2.069,53,3.557,54,2.638,55,2.069,56,2.069,287,3.55,295,3.231,296,3.263,304,3.263,305,3.263,306,3.902,307,3.902]],["title/injectables/UserService.html",[64,1.104,295,1.685]],["body/injectables/UserService.html",[0,0.754,3,0.145,4,0.145,5,0.121,7,0.282,12,0.313,13,1.225,16,0.031,17,0.847,20,1.961,23,1.963,24,0.847,25,0.467,26,0.494,29,0.145,30,0.102,33,1.79,35,0.01,36,0.015,37,0.01,64,1.13,65,1.13,67,1.899,76,1.534,77,1.386,79,0.861,82,1.206,83,1.913,90,1.043,91,1.961,92,1.445,93,1.445,94,1.445,99,2.496,100,1.043,101,1.612,102,2.226,105,1.445,109,2.925,110,3.137,111,1.445,114,1.445,115,1.445,119,1.043,122,2.112,126,0.947,128,0.947,147,2.108,148,2.108,150,3.483,155,3.081,156,1.382,157,1.382,158,1.382,227,2.657,230,1.899,281,3.137,283,2.37,285,3.491,289,2.721,295,1.725,308,1.783,309,2.132,310,2.132,311,2.132,312,2.132,313,2.132]],["title/coverage.html",[314,3.633]],["body/coverage.html",[0,1.225,1,1.784,5,0.156,6,2.303,16,0.031,19,1.784,27,1.46,30,0.291,35,0.013,36,0.019,37,0.013,44,1.223,64,1.836,66,2.303,69,1.037,71,2.303,79,0.537,87,1.784,88,2.303,96,1.46,101,1.125,116,1.607,124,1.46,146,2.303,159,1.333,160,2.303,162,1.037,171,1.784,172,2.303,174,1.46,179,1.607,181,1.46,195,2.303,201,2.303,202,2.863,211,2.303,212,2.863,221,1.46,222,2.303,223,2.863,227,1.46,228,2.303,229,2.863,231,2.303,234,1.784,235,2.303,241,1.607,243,1.46,258,2.303,264,2.303,272,2.303,278,2.303,281,1.607,282,2.303,285,1.607,286,2.303,287,1.784,288,2.303,295,1.46,308,2.303,314,2.303,315,2.753,316,2.753,317,2.753,318,6.447,319,4.584,320,2.303,321,4.999,322,5.786,323,4.584,324,4.584,325,3.931,326,2.753,327,2.753]],["title/dependencies.html",[41,1.698,328,2.65]],["body/dependencies.html",[16,0.031,26,1.02,35,0.021,36,0.025,37,0.021,41,1.956,130,1.529,329,5.787,330,4.403,331,4.403,332,5.365,333,4.403,334,4.403,335,4.403,336,4.403,337,4.403,338,4.403,339,4.403,340,4.403,341,4.403,342,4.403,343,4.403]],["title/miscellaneous/functions.html",[344,2.216,345,3.198]],["body/miscellaneous/functions.html",[9,3.489,12,0.703,16,0.028,19,3.104,35,0.023,36,0.027,37,0.023,44,2.665,320,4.006,344,4.006,345,4.006,346,4.79,347,4.79]],["title/index.html",[12,0.389,348,2.65,349,2.65]],["body/index.html",[16,0.028,35,0.024,36,0.028,37,0.024]],["title/modules.html",[40,1.93]],["body/modules.html",[16,0.026,35,0.021,36,0.026,37,0.021,39,2.894,40,1.984,50,2.607,51,2.607,52,2.607,53,2.607,350,6.2,351,6.2,352,6.2,353,6.2]],["title/overview.html",[354,3.633]],["body/overview.html",[2,1.199,16,0.03,27,2.737,35,0.016,36,0.022,37,0.016,38,1.199,39,4.11,40,1.533,41,1.533,42,1.83,43,1.83,44,1.533,45,1.83,46,1.83,47,2.886,48,2.886,49,2.886,50,3.345,51,3.345,52,3.345,53,3.345,54,2.435,55,1.83,56,1.83,65,1.83,70,1.021,124,2.737,142,2.886,143,2.886,181,2.737,191,2.886,192,2.886,243,2.737,254,2.886,255,2.886,295,2.737,304,2.886,305,2.886,354,2.886,355,5.163,356,3.451]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0.1.13",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":356,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["4.1.6",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["4.7.12",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":355,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["7.5.1",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":155,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":156,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["apiproperty",{"_index":210,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["apiproperty({description",{"_index":206,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["apitags",{"_index":129,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["apitags('authors",{"_index":131,"title":{},"body":{"controllers/AuthorController.html":{}}}],["apitags('books",{"_index":184,"title":{},"body":{"controllers/BookController.html":{}}}],["apitags('publishers",{"_index":246,"title":{},"body":{"controllers/PublisherController.html":{}}}],["apitags('users",{"_index":297,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["app.controller",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":27,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["author",{"_index":69,"title":{"classes/Author.html":{}},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["author.controller",{"_index":145,"title":{},"body":{"modules/AuthorModule.html":{}}}],["author.dto",{"_index":127,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts",{"_index":202,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["author.dto.ts:13",{"_index":208,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts:15",{"_index":265,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts:21",{"_index":207,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts:23",{"_index":266,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["author.dto.ts:29",{"_index":209,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.service",{"_index":125,"title":{},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{}}}],["author/entities/author.entity",{"_index":169,"title":{},"body":{"classes/Book.html":{}}}],["author_id",{"_index":213,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["authorcontroller",{"_index":87,"title":{"controllers/AuthorController.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"coverage.html":{}}}],["authormodule",{"_index":50,"title":{"modules/AuthorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":73,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["authorservice",{"_index":124,"title":{"injectables/AuthorService.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":120,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["book",{"_index":159,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.controller",{"_index":194,"title":{},"body":{"modules/BookModule.html":{}}}],["book.dto",{"_index":183,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts",{"_index":212,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:13",{"_index":217,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:15",{"_index":276,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:21",{"_index":220,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:23",{"_index":274,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:29",{"_index":216,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.dto.ts:31",{"_index":275,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["book.dto.ts:37",{"_index":219,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book.service",{"_index":182,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["bookcontroller",{"_index":171,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookmodule",{"_index":51,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["books",{"_index":161,"title":{},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["bookservice",{"_index":181,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"coverage.html":{},"overview.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":353,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":350,"title":{},"body":{"modules.html":{}}}],["class",{"_index":30,"title":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":70,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authormodule",{"_index":142,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_authormodule_providers",{"_index":143,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":191,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":192,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_publishermodule",{"_index":254,"title":{},"body":{"modules/PublisherModule.html":{},"overview.html":{}}}],["cluster_publishermodule_providers",{"_index":255,"title":{},"body":{"modules/PublisherModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":304,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":305,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["constructor(private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["controller('authors",{"_index":132,"title":{},"body":{"controllers/AuthorController.html":{}}}],["controller('books",{"_index":185,"title":{},"body":{"controllers/BookController.html":{}}}],["controller('publishers",{"_index":247,"title":{},"body":{"controllers/PublisherController.html":{}}}],["controller('users",{"_index":298,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":314,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":90,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":133,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["create(createauthordto",{"_index":95,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["create(createbookdto",{"_index":173,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(createpublisherdto",{"_index":236,"title":{},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{}}}],["create(createuserdto",{"_index":289,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createauthordto",{"_index":96,"title":{"classes/CreateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["createbookdto",{"_index":174,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["createpublisherdto",{"_index":221,"title":{"classes/CreatePublisherDto.html":{}},"body":{"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":227,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":100,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["data",{"_index":203,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["declarations",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":123,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":112,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["deleting",{"_index":114,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["documentation",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":126,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":128,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":72,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/Publisher.html":{},"classes/User.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":270,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":91,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finding",{"_index":104,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["findone",{"_index":92,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":136,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":105,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["first",{"_index":81,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["first_name",{"_index":75,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["function",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":345,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":106,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["gethello",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":348,"title":{"index.html":{}},"body":{}}],["given",{"_index":110,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["hello",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["id",{"_index":77,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateBookDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["last",{"_index":86,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["last_name",{"_index":78,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{}}}],["legend",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["main",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["matching",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":99,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":344,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":82,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":268,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["nestjs/platform",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":130,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"controllers/PublisherController.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":101,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["number",{"_index":83,"title":{},"body":{"classes/Author.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"injectables/PublisherService.html":{},"classes/UpdateBookDto.html":{},"injectables/UserService.html":{}}}],["object",{"_index":205,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["operations",{"_index":147,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["optional",{"_index":76,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":354,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":328,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":122,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["param('id",{"_index":251,"title":{},"body":{"controllers/PublisherController.html":{}}}],["parameter",{"_index":109,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":267,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createauthordto",{"_index":271,"title":{},"body":{"classes/UpdateAuthorDto.html":{}}}],["partialtype(createbookdto",{"_index":277,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["partialtype(createpublisherdto",{"_index":280,"title":{},"body":{"classes/UpdatePublisherDto.html":{}}}],["partialtype(createuserdto",{"_index":284,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passed",{"_index":148,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["post",{"_index":97,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["properties",{"_index":74,"title":{},"body":{"classes/Author.html":{},"classes/Book.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["publisher",{"_index":162,"title":{"classes/Publisher.html":{}},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["publisher.controller",{"_index":257,"title":{},"body":{"modules/PublisherModule.html":{}}}],["publisher.dto",{"_index":245,"title":{},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{}}}],["publisher.dto.ts",{"_index":223,"title":{},"body":{"classes/CreatePublisherDto.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["publisher.dto.ts:13",{"_index":225,"title":{},"body":{"classes/CreatePublisherDto.html":{}}}],["publisher.dto.ts:15",{"_index":279,"title":{},"body":{"classes/UpdatePublisherDto.html":{}}}],["publisher.dto.ts:21",{"_index":226,"title":{},"body":{"classes/CreatePublisherDto.html":{}}}],["publisher.service",{"_index":244,"title":{},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{}}}],["publisher/entities/publisher.entity",{"_index":170,"title":{},"body":{"classes/Book.html":{}}}],["publisher_id",{"_index":214,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["publishercontroller",{"_index":234,"title":{"controllers/PublisherController.html":{}},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"coverage.html":{}}}],["publishermodule",{"_index":52,"title":{"modules/PublisherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PublisherModule.html":{},"modules.html":{},"overview.html":{}}}],["publishers",{"_index":224,"title":{},"body":{"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{}}}],["publisherservice",{"_index":243,"title":{"injectables/PublisherService.html":{}},"body":{"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"coverage.html":{},"overview.html":{}}}],["put",{"_index":121,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":117,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["reference",{"_index":165,"title":{},"body":{"classes/Book.html":{}}}],["referenced",{"_index":273,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["referencing",{"_index":215,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["referencjing",{"_index":218,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["reflect",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":93,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":140,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/PublisherController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":111,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removes",{"_index":158,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources/author/author.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/book/book.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/publisher/publisher.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["resources/user/user.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["result",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"modules/PublisherModule.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["specified",{"_index":108,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/.../main.ts",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":320,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/resources/author/author.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthorController.html":{},"coverage.html":{}}}],["src/resources/author/author.controller.ts:28",{"_index":98,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:36",{"_index":103,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:45",{"_index":107,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:55",{"_index":118,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.controller.ts:64",{"_index":113,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/resources/author/author.module.ts",{"_index":144,"title":{},"body":{"modules/AuthorModule.html":{}}}],["src/resources/author/author.service.ts",{"_index":146,"title":{},"body":{"injectables/AuthorService.html":{},"coverage.html":{}}}],["src/resources/author/author.service.ts:14",{"_index":149,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:21",{"_index":151,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:29",{"_index":152,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:38",{"_index":154,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/author.service.ts:46",{"_index":153,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/resources/author/dto/create",{"_index":201,"title":{},"body":{"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["src/resources/author/dto/update",{"_index":264,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["src/resources/author/entities/author.entity.ts",{"_index":71,"title":{},"body":{"classes/Author.html":{},"coverage.html":{}}}],["src/resources/author/entities/author.entity.ts:13",{"_index":80,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/author/entities/author.entity.ts:18",{"_index":85,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/author/entities/author.entity.ts:8",{"_index":84,"title":{},"body":{"classes/Author.html":{}}}],["src/resources/book/book.controller.ts",{"_index":172,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/resources/book/book.controller.ts:28",{"_index":175,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:36",{"_index":176,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:45",{"_index":177,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:55",{"_index":180,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.controller.ts:64",{"_index":178,"title":{},"body":{"controllers/BookController.html":{}}}],["src/resources/book/book.module.ts",{"_index":193,"title":{},"body":{"modules/BookModule.html":{}}}],["src/resources/book/book.service.ts",{"_index":195,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/resources/book/book.service.ts:14",{"_index":196,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:21",{"_index":197,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:29",{"_index":198,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:38",{"_index":200,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/book.service.ts:46",{"_index":199,"title":{},"body":{"injectables/BookService.html":{}}}],["src/resources/book/dto/create",{"_index":211,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/resources/book/dto/update",{"_index":272,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/resources/book/entities/book.entity.ts",{"_index":160,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/resources/book/entities/book.entity.ts:11",{"_index":166,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:16",{"_index":168,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:21",{"_index":164,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/book/entities/book.entity.ts:26",{"_index":167,"title":{},"body":{"classes/Book.html":{}}}],["src/resources/publisher/dto/create",{"_index":222,"title":{},"body":{"classes/CreatePublisherDto.html":{},"coverage.html":{}}}],["src/resources/publisher/dto/update",{"_index":278,"title":{},"body":{"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts",{"_index":231,"title":{},"body":{"classes/Publisher.html":{},"coverage.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts:13",{"_index":233,"title":{},"body":{"classes/Publisher.html":{}}}],["src/resources/publisher/entities/publisher.entity.ts:8",{"_index":232,"title":{},"body":{"classes/Publisher.html":{}}}],["src/resources/publisher/publisher.controller.ts",{"_index":235,"title":{},"body":{"controllers/PublisherController.html":{},"coverage.html":{}}}],["src/resources/publisher/publisher.controller.ts:28",{"_index":237,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:36",{"_index":238,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:45",{"_index":239,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:55",{"_index":242,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.controller.ts:67",{"_index":240,"title":{},"body":{"controllers/PublisherController.html":{}}}],["src/resources/publisher/publisher.module.ts",{"_index":256,"title":{},"body":{"modules/PublisherModule.html":{}}}],["src/resources/publisher/publisher.service.ts",{"_index":258,"title":{},"body":{"injectables/PublisherService.html":{},"coverage.html":{}}}],["src/resources/publisher/publisher.service.ts:14",{"_index":259,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:21",{"_index":260,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:29",{"_index":261,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:38",{"_index":263,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/publisher/publisher.service.ts:46",{"_index":262,"title":{},"body":{"injectables/PublisherService.html":{}}}],["src/resources/user/dto/create",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/resources/user/dto/update",{"_index":282,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/resources/user/entities/user.entity.ts",{"_index":286,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/resources/user/user.controller.ts",{"_index":288,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/resources/user/user.controller.ts:28",{"_index":290,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:36",{"_index":291,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:45",{"_index":292,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:55",{"_index":294,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.controller.ts:64",{"_index":293,"title":{},"body":{"controllers/UserController.html":{}}}],["src/resources/user/user.module.ts",{"_index":306,"title":{},"body":{"modules/UserModule.html":{}}}],["src/resources/user/user.service.ts",{"_index":308,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/resources/user/user.service.ts:14",{"_index":309,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:21",{"_index":310,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:29",{"_index":311,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:38",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["src/resources/user/user.service.ts:46",{"_index":312,"title":{},"body":{"injectables/UserService.html":{}}}],["started",{"_index":349,"title":{"index.html":{}},"body":{}}],["starting",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["statements",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["support",{"_index":351,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":352,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["this.appservice.gethello",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authorservice.create(createauthordto",{"_index":134,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findall",{"_index":135,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.findone(+id",{"_index":137,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.remove(+id",{"_index":141,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.update(+id",{"_index":139,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.bookservice.create(createbookdto",{"_index":186,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall",{"_index":187,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findone(+id",{"_index":188,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.remove(+id",{"_index":190,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.update(+id",{"_index":189,"title":{},"body":{"controllers/BookController.html":{}}}],["this.publisherservice.create(createpublisherdto",{"_index":248,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.findall",{"_index":249,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.findone(+id",{"_index":250,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.remove(+id",{"_index":253,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.publisherservice.update(+id",{"_index":252,"title":{},"body":{"controllers/PublisherController.html":{}}}],["this.userservice.create(createuserdto",{"_index":299,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":300,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(+id",{"_index":301,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(+id",{"_index":303,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":302,"title":{},"body":{"controllers/UserController.html":{}}}],["title",{"_index":163,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["transfer",{"_index":204,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["type",{"_index":79,"title":{},"body":{"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreatePublisherDto.html":{},"classes/Publisher.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types",{"_index":269,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{}}}],["ui",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["update",{"_index":94,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":138,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":115,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateauthordto",{"_index":116,"title":{"classes/UpdateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["updatebookdto",{"_index":179,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatepublisherdto",{"_index":241,"title":{"classes/UpdatePublisherDto.html":{}},"body":{"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdatePublisherDto.html":{},"coverage.html":{}}}],["updates",{"_index":157,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["updateuserdto",{"_index":281,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":119,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/PublisherController.html":{},"injectables/PublisherService.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdatePublisherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user",{"_index":285,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":307,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":283,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.service",{"_index":296,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":287,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":53,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":295,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":150,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/PublisherService.html":{},"injectables/UserService.html":{}}}],["world",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["zoom",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/PublisherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Main app controller for root route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n                    Function returning hello world\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n/**\n * Main app controller for root route\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Function returning hello world\n   */\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nPublisherModule\n\nPublisherModule\n\nAppModule -->\n\nPublisherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            PublisherModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BookModule } from './resources/book/book.module';\nimport { AuthorModule } from './resources/author/author.module';\nimport { PublisherModule } from './resources/publisher/publisher.module';\nimport { UserModule } from './resources/user/user.module';\n\n@Module({\n  imports: [BookModule, AuthorModule, PublisherModule, UserModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Main app service for app controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:11\n                \n            \n\n\n            \n                \n                    Function returning 'Hello world'\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Main app service for app controller\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Function returning 'Hello world'\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Author.html":{"url":"classes/Author.html","title":"class - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/entities/author.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:13\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:8\n                            \n                        \n\n                \n                    \n                        ID of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/entities/author.entity.ts:18\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Author {\n  /**\n   * ID of author\n   */\n  id?: number;\n\n  /**\n   * First name of author\n   */\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthorController.html":{"url":"controllers/AuthorController.html","title":"controller - AuthorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/author.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                authors\n            \n\n            \n                Description\n            \n            \n                Controller for authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createAuthorDto: CreateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new author\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorDto\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method finding all authors\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method finding specified author by parameter given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting specified author by parameter given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/author/author.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating specified author by parameters given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for authors\n */\n@ApiTags('Authors')\n@Controller('authors')\nexport class AuthorController {\n  constructor(private readonly authorService: AuthorService) {}\n\n  /**\n   * Method creating new author\n   * @param createAuthorDto\n   */\n  @Post()\n  create(@Body() createAuthorDto: CreateAuthorDto) {\n    return this.authorService.create(createAuthorDto);\n  }\n\n  /**\n   * Method finding all authors\n   */\n  @Get()\n  findAll() {\n    return this.authorService.findAll();\n  }\n\n  /**\n   * Method finding specified author by parameter given\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.authorService.findOne(+id);\n  }\n\n  /**\n   * Method updating specified author by parameters given\n   * @param id\n   * @param updateAuthorDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateAuthorDto: UpdateAuthorDto) {\n    return this.authorService.update(+id, updateAuthorDto);\n  }\n\n  /**\n   * Method deleting specified author by parameter given\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.authorService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorModule.html":{"url":"modules/AuthorModule.html","title":"module - AuthorModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\n\nAuthorService\n\nAuthorService\n\n\n\nAuthorModule\n\nAuthorModule\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/author/author.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthorService } from './author.service';\nimport { AuthorController } from './author.controller';\n\n@Module({\n  controllers: [AuthorController],\n  providers: [AuthorService],\n})\nexport class AuthorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorService.html":{"url":"injectables/AuthorService.html","title":"injectable - AuthorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/author.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for authors operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createAuthorDto: CreateAuthorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new author using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthorDto\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:21\n                \n            \n\n\n            \n                \n                    Method finding all authors\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:29\n                \n            \n\n\n            \n                \n                    Method finding author by given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting author using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/author/author.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating author using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { UpdateAuthorDto } from './dto/update-author.dto';\n\n/**\n * Service for authors operations passed to controller\n */\n@Injectable()\nexport class AuthorService {\n  /**\n   * Method creating new author using given parameter\n   * @param createAuthorDto\n   */\n  create(createAuthorDto: CreateAuthorDto) {\n    return 'This action adds a new author';\n  }\n\n  /**\n   * Method finding all authors\n   */\n  findAll() {\n    return `This action returns all author`;\n  }\n\n  /**\n   * Method finding author by given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} author`;\n  }\n\n  /**\n   * Method updating author using given parameters\n   * @param id\n   * @param updateAuthorDto\n   */\n  update(id: number, updateAuthorDto: UpdateAuthorDto) {\n    return `This action updates a #${id} author`;\n  }\n\n  /**\n   * Method deleting author using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} author`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/entities/book.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Author\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to Author of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:11\n                            \n                        \n\n                \n                    \n                        ID of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Publisher\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to Publisher of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/entities/book.entity.ts:16\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Author } from '../../author/entities/author.entity';\nimport { Publisher } from '../../publisher/entities/publisher.entity';\n\n/**\n * Entity Class for books\n */\nexport class Book {\n  /**\n   * ID of book\n   */\n  id?: number;\n\n  /**\n   * Title of book\n   */\n  title: string;\n\n  /**\n   * Reference to Author of book\n   */\n  author: Author;\n\n  /**\n   * Reference to Publisher of book\n   */\n  publisher: Publisher;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n            \n                Description\n            \n            \n                Controller for books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new book\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all books\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/book/book.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating book by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { BookService } from './book.service';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for books\n */\n@ApiTags('Books')\n@Controller('books')\nexport class BookController {\n  constructor(private readonly bookService: BookService) {}\n\n  /**\n   * Method creating new book\n   * @param createBookDto\n   */\n  @Post()\n  create(@Body() createBookDto: CreateBookDto) {\n    return this.bookService.create(createBookDto);\n  }\n\n  /**\n   * Method returning all books\n   */\n  @Get()\n  findAll() {\n    return this.bookService.findAll();\n  }\n\n  /**\n   * Method returning book by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.bookService.findOne(+id);\n  }\n\n  /**\n   * Method updating book by ID\n   * @param id\n   * @param updateBookDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateBookDto: UpdateBookDto) {\n    return this.bookService.update(+id, updateBookDto);\n  }\n\n  /**\n   * Method deleting book by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.bookService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookService\n\nBookService\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/book/book.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BookService } from './book.service';\nimport { BookController } from './book.controller';\n\n@Module({\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/book.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for book operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createBookDto: CreateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:21\n                \n            \n\n\n            \n                \n                    Method returning all books\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:29\n                \n            \n\n\n            \n                \n                    Method returning book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting book using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBookDto: UpdateBookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/book/book.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating book using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\n\n/**\n * Service for book operations passed to controller\n */\n@Injectable()\nexport class BookService {\n  /**\n   * Method creating new book using given parameter\n   * @param createBookDto\n   */\n  create(createBookDto: CreateBookDto) {\n    return 'This action adds a new book';\n  }\n\n  /**\n   * Method returning all books\n   */\n  findAll() {\n    return `This action returns all book`;\n  }\n\n  /**\n   * Method returning book using given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} book`;\n  }\n\n  /**\n   * Method updating book using given parameters\n   * @param id\n   * @param updateBookDto\n   */\n  update(id: number, updateBookDto: UpdateBookDto) {\n    return `This action updates a #${id} book`;\n  }\n\n  /**\n   * Method deleting book using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} book`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorDto.html":{"url":"classes/CreateAuthorDto.html","title":"class - CreateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/dto/create-author.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                id\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:21\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:13\n                            \n                        \n\n                \n                    \n                        ID of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/create-author.dto.ts:29\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating authors\n */\nexport class CreateAuthorDto {\n  /**\n   * ID of author\n   */\n  @ApiProperty({\n    description: 'ID of author',\n  })\n  id: number;\n\n  /**\n   * First name of author\n   */\n  @ApiProperty({\n    description: 'First name of author',\n  })\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  @ApiProperty({\n    description: 'Last name of author',\n  })\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/dto/create-book.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author_id\n                            \n                            \n                                id\n                            \n                            \n                                publisher_id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID referencing author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:29\n                            \n                        \n\n                \n                    \n                        ID referencing author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:13\n                            \n                        \n\n                \n                    \n                        ID of book\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID referencjing publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:37\n                            \n                        \n\n                \n                    \n                        ID referencjing publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/create-book.dto.ts:21\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating books\n */\nexport class CreateBookDto {\n  /**\n   * ID of book\n   */\n  @ApiProperty({\n    description: 'ID of book',\n  })\n  id: number;\n\n  /**\n   * Title of book\n   */\n  @ApiProperty({\n    description: 'Title of book',\n  })\n  title: string;\n\n  /**\n   * ID referencing author\n   */\n  @ApiProperty({\n    description: 'ID referencing author',\n  })\n  author_id: number;\n\n  /**\n   * ID referencjing publisher\n   */\n  @ApiProperty({\n    description: 'ID referencjing publisher',\n  })\n  publisher_id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePublisherDto.html":{"url":"classes/CreatePublisherDto.html","title":"class - CreatePublisherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePublisherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/dto/create-publisher.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/create-publisher.dto.ts:13\n                            \n                        \n\n                \n                    \n                        ID of publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/create-publisher.dto.ts:21\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for creating publishers\n */\nexport class CreatePublisherDto {\n  /**\n   * ID of publisher\n   */\n  @ApiProperty({\n    description: 'ID of publisher',\n  })\n  id: number;\n\n  /**\n   * Name of publisher\n   */\n  @ApiProperty({\n    description: 'Name of publisher'\n  })\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/dto/create-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for creating users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Publisher.html":{"url":"classes/Publisher.html","title":"class - Publisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Publisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/entities/publisher.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/entities/publisher.entity.ts:8\n                            \n                        \n\n                \n                    \n                        ID of publisher\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/entities/publisher.entity.ts:13\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Publisher {\n  /**\n   * ID of publisher\n   */\n  id?: number;\n\n  /**\n   * Name of publisher\n   */\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PublisherController.html":{"url":"controllers/PublisherController.html","title":"controller - PublisherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PublisherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/publisher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                publishers\n            \n\n            \n                Description\n            \n            \n                Controller for publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPublisherDto: CreatePublisherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new publisher\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublisherDto\n                                    \n                                                CreatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all publishers\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:67\n                \n            \n\n\n            \n                \n                    Method deleting publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePublisherDto: UpdatePublisherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/publisher/publisher.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating publisher by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublisherDto\n                                    \n                                                UpdatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PublisherService } from './publisher.service';\nimport { CreatePublisherDto } from './dto/create-publisher.dto';\nimport { UpdatePublisherDto } from './dto/update-publisher.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for publishers\n */\n@ApiTags('Publishers')\n@Controller('publishers')\nexport class PublisherController {\n  constructor(private readonly publisherService: PublisherService) {}\n\n  /**\n   * Method creating new publisher\n   * @param createPublisherDto\n   */\n  @Post()\n  create(@Body() createPublisherDto: CreatePublisherDto) {\n    return this.publisherService.create(createPublisherDto);\n  }\n\n  /**\n   * Method returning all publishers\n   */\n  @Get()\n  findAll() {\n    return this.publisherService.findAll();\n  }\n\n  /**\n   * Method returning publisher by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.publisherService.findOne(+id);\n  }\n\n  /**\n   * Method updating publisher by ID\n   * @param id\n   * @param updatePublisherDto\n   */\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updatePublisherDto: UpdatePublisherDto,\n  ) {\n    return this.publisherService.update(+id, updatePublisherDto);\n  }\n\n  /**\n   * Method deleting publisher by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.publisherService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublisherModule.html":{"url":"modules/PublisherModule.html","title":"module - PublisherModule","body":"\n                   \n\n\n\n\n    Modules\n    PublisherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublisherModule\n\n\n\ncluster_PublisherModule_providers\n\n\n\n\nPublisherService\n\nPublisherService\n\n\n\nPublisherModule\n\nPublisherModule\n\nPublisherModule -->\n\nPublisherService->PublisherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/publisher/publisher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PublisherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PublisherController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PublisherService } from './publisher.service';\nimport { PublisherController } from './publisher.controller';\n\n@Module({\n  controllers: [PublisherController],\n  providers: [PublisherService],\n})\nexport class PublisherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublisherService.html":{"url":"injectables/PublisherService.html","title":"injectable - PublisherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PublisherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/publisher.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for publisher operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPublisherDto: CreatePublisherDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublisherDto\n                                    \n                                                CreatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:21\n                \n            \n\n\n            \n                \n                    Method returning all publishers\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:29\n                \n            \n\n\n            \n                \n                    Method returning publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting publisher using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePublisherDto: UpdatePublisherDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/publisher/publisher.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating publisher using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublisherDto\n                                    \n                                                UpdatePublisherDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePublisherDto } from './dto/create-publisher.dto';\nimport { UpdatePublisherDto } from './dto/update-publisher.dto';\n\n/**\n * Service for publisher operations passed to controller\n */\n@Injectable()\nexport class PublisherService {\n  /**\n   * Method creating new publisher using given parameter\n   * @param createPublisherDto\n   */\n  create(createPublisherDto: CreatePublisherDto) {\n    return 'This action adds a new publisher';\n  }\n\n  /**\n   * Method returning all publishers\n   */\n  findAll() {\n    return `This action returns all publisher`;\n  }\n\n  /**\n   * Method returning publisher using given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} publisher`;\n  }\n\n  /**\n   * Method updating publisher using given parameters\n   * @param id\n   * @param updatePublisherDto\n   */\n  update(id: number, updatePublisherDto: UpdatePublisherDto) {\n    return `This action updates a #${id} publisher`;\n  }\n\n  /**\n   * Method deleting publisher using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} publisher`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthorDto.html":{"url":"classes/UpdateAuthorDto.html","title":"class - UpdateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/author/dto/update-author.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating authors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                last_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/update-author.dto.ts:15\n                            \n                        \n\n                \n                    \n                        First name of author\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of author'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/author/dto/update-author.dto.ts:23\n                            \n                        \n\n                \n                    \n                        Last name of author\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthorDto } from './create-author.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating authors\n */\nexport class UpdateAuthorDto extends PartialType(CreateAuthorDto) {\n  /**\n   * First name of author\n   */\n  @ApiProperty({\n    description: 'First name of author',\n  })\n  first_name: string;\n\n  /**\n   * Last name of author\n   */\n  @ApiProperty({\n    description: 'Last name of author',\n  })\n  last_name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/book/dto/update-book.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating books\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author_id\n                            \n                            \n                                publisher_id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Author referenced by ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:23\n                            \n                        \n\n                \n                    \n                        Author referenced by ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Publisher referenced by ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:31\n                            \n                        \n\n                \n                    \n                        Publisher referenced by ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of book'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/book/dto/update-book.dto.ts:15\n                            \n                        \n\n                \n                    \n                        Title of book\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBookDto } from './create-book.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating books\n */\nexport class UpdateBookDto extends PartialType(CreateBookDto) {\n  /**\n   * Title of book\n   */\n  @ApiProperty({\n    description: 'Title of book',\n  })\n  title: string;\n\n  /**\n   * Author referenced by ID\n   */\n  @ApiProperty({\n    description: 'Author referenced by ID',\n  })\n  author_id: number;\n\n  /**\n   * Publisher referenced by ID\n   */\n  @ApiProperty({\n    description: 'Publisher referenced by ID',\n  })\n  publisher_id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePublisherDto.html":{"url":"classes/UpdatePublisherDto.html","title":"class - UpdatePublisherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePublisherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/publisher/dto/update-publisher.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of publisher'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/resources/publisher/dto/update-publisher.dto.ts:15\n                            \n                        \n\n                \n                    \n                        Name of publisher\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePublisherDto } from './create-publisher.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Data Transfer Object for updating publishers\n */\nexport class UpdatePublisherDto extends PartialType(CreatePublisherDto) {\n  /**\n   * Name of publisher\n   */\n  @ApiProperty({\n    description: 'Name of publisher',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/dto/update-user.dto.ts\n        \n\n            \n                Description\n            \n            \n                Data Transfer Object for updating users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\n/**\n * Data Transfer Object for updating users\n */\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/entities/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity Class for users\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n            \n                Description\n            \n            \n                Controller for users\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n                    Method creating new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:36\n                \n            \n\n\n            \n                \n                    Method returning all users\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:45\n                \n            \n\n\n            \n                \n                    Method returning user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:64\n                \n            \n\n\n            \n                \n                    Method deleting user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/resources/user/user.controller.ts:55\n                \n            \n\n\n            \n                \n                    Method updating user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Controller for users\n */\n@ApiTags('Users')\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n   * Method creating new user\n   * @param createUserDto\n   */\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  /**\n   * Method returning all users\n   */\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  /**\n   * Method returning user by ID\n   * @param id\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  /**\n   * Method updating user by ID\n   * @param id\n   * @param updateUserDto\n   */\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  /**\n   * Method deleting user by ID\n   * @param id\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resources/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resources/user/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for user operations passed to controller\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:14\n                \n            \n\n\n            \n                \n                    Method creating new user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:21\n                \n            \n\n\n            \n                \n                    Method returning all users\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:29\n                \n            \n\n\n            \n                \n                    Method returning user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:46\n                \n            \n\n\n            \n                \n                    Method deleting user using given parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/resources/user/user.service.ts:38\n                \n            \n\n\n            \n                \n                    Method updating user using given parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n/**\n * Service for user operations passed to controller\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Method creating new user using given parameter\n   * @param createUserDto\n   */\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  /**\n   * Method returning all users\n   */\n  findAll() {\n    return `This action returns all user`;\n  }\n\n  /**\n   * Method returning user using given parameter\n   * @param id\n   */\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  /**\n   * Method updating user using given parameters\n   * @param id\n   * @param updateUserDto\n   */\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  /**\n   * Method deleting user using given parameter\n   * @param id\n   */\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/author/author.controller.ts\n            \n            controller\n            AuthorController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/author/author.service.ts\n            \n            injectable\n            AuthorService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/author/dto/create-author.dto.ts\n            \n            class\n            CreateAuthorDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/resources/author/dto/update-author.dto.ts\n            \n            class\n            UpdateAuthorDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/author/entities/author.entity.ts\n            \n            class\n            Author\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/resources/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/resources/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/resources/book/entities/book.entity.ts\n            \n            class\n            Book\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/resources/publisher/dto/create-publisher.dto.ts\n            \n            class\n            CreatePublisherDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/publisher/dto/update-publisher.dto.ts\n            \n            class\n            UpdatePublisherDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/resources/publisher/entities/publisher.entity.ts\n            \n            class\n            Publisher\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/resources/publisher/publisher.controller.ts\n            \n            controller\n            PublisherController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/publisher/publisher.service.ts\n            \n            injectable\n            PublisherService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/resources/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/resources/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.12\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    *\nFunction starting app\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublisherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_PublisherModule\n\n\n\ncluster_PublisherModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nPublisherModule\n\nPublisherModule\n\nAppModule -->\n\nPublisherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\nPublisherService\n\nPublisherService\n\nPublisherModule -->\n\nPublisherService->PublisherModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
